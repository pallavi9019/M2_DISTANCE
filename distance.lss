
distance.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000a4a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000001a  00800060  00000a4a  00000ade  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000002  0080007a  0080007a  00000af8  2**0
                  ALLOC
  3 .debug_aranges 00000020  00000000  00000000  00000af8  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 00000086  00000000  00000000  00000b18  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000003c2  00000000  00000000  00000b9e  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000184  00000000  00000000  00000f60  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000372  00000000  00000000  000010e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000080  00000000  00000000  00001458  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000013d  00000000  00000000  000014d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000fe  00000000  00000000  00001615  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000048  00000000  00000000  00001713  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__ctors_end>
   4:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
   8:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
   c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  10:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  14:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  18:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  1c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  20:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  24:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  28:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  2c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  30:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  34:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  38:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  3c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  40:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  44:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  48:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  4c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  50:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  54:	00 40       	sbci	r16, 0x00	; 0
  56:	7a 10       	cpse	r7, r10
  58:	f3 5a       	subi	r31, 0xA3	; 163
  5a:	00 a0       	ldd	r0, Z+32	; 0x20
  5c:	72 4e       	sbci	r23, 0xE2	; 226
  5e:	18 09       	sbc	r17, r8
  60:	00 10       	cpse	r0, r0
  62:	a5 d4       	rcall	.+2378   	; 0x9ae <__stack+0x14f>
  64:	e8 00       	.word	0x00e8	; ????
  66:	00 e8       	ldi	r16, 0x80	; 128
  68:	76 48       	sbci	r23, 0x86	; 134
  6a:	17 00       	.word	0x0017	; ????
  6c:	00 e4       	ldi	r16, 0x40	; 64
  6e:	0b 54       	subi	r16, 0x4B	; 75
  70:	02 00       	.word	0x0002	; ????
  72:	00 ca       	rjmp	.-3072   	; 0xfffff474 <__eeprom_end+0xff7ef474>
  74:	9a 3b       	cpi	r25, 0xBA	; 186
  76:	00 00       	nop
  78:	00 e1       	ldi	r16, 0x10	; 16
  7a:	f5 05       	cpc	r31, r5
  7c:	00 00       	nop
  7e:	80 96       	adiw	r24, 0x20	; 32
  80:	98 00       	.word	0x0098	; ????
  82:	00 00       	nop
  84:	40 42       	sbci	r20, 0x20	; 32
  86:	0f 00       	.word	0x000f	; ????
  88:	00 00       	nop
  8a:	a0 86       	std	Z+8, r10	; 0x08
  8c:	01 00       	.word	0x0001	; ????
  8e:	00 00       	nop
  90:	10 27       	eor	r17, r16
  92:	00 00       	nop
  94:	00 00       	nop
  96:	e8 03       	fmulsu	r22, r16
  98:	00 00       	nop
  9a:	00 00       	nop
  9c:	64 00       	.word	0x0064	; ????
  9e:	00 00       	nop
  a0:	00 00       	nop
  a2:	0a 00       	.word	0x000a	; ????
  a4:	00 00       	nop
  a6:	00 00       	nop
  a8:	01 00       	.word	0x0001	; ????
  aa:	00 00       	nop
  ac:	00 00       	nop
  ae:	2c 76       	andi	r18, 0x6C	; 108
  b0:	d8 88       	ldd	r13, Y+16	; 0x10
  b2:	dc 67       	ori	r29, 0x7C	; 124
  b4:	4f 08       	sbc	r4, r15
  b6:	23 df       	rcall	.-442    	; 0xfffffefe <__eeprom_end+0xff7efefe>
  b8:	c1 df       	rcall	.-126    	; 0x3c <__CCP__+0x8>
  ba:	ae 59       	subi	r26, 0x9E	; 158
  bc:	e1 b1       	in	r30, 0x01	; 1
  be:	b7 96       	adiw	r30, 0x27	; 39
  c0:	e5 e3       	ldi	r30, 0x35	; 53
  c2:	e4 53       	subi	r30, 0x34	; 52
  c4:	c6 3a       	cpi	r28, 0xA6	; 166
  c6:	e6 51       	subi	r30, 0x16	; 22
  c8:	99 76       	andi	r25, 0x69	; 105
  ca:	96 e8       	ldi	r25, 0x86	; 134
  cc:	e6 c2       	rjmp	.+1484   	; 0x69a <dtoa_prf+0x136>
  ce:	84 26       	eor	r8, r20
  d0:	eb 89       	ldd	r30, Y+19	; 0x13
  d2:	8c 9b       	sbis	0x11, 4	; 17
  d4:	62 ed       	ldi	r22, 0xD2	; 210
  d6:	40 7c       	andi	r20, 0xC0	; 192
  d8:	6f fc       	.word	0xfc6f	; ????
  da:	ef bc       	out	0x2f, r14	; 47
  dc:	9c 9f       	mul	r25, r28
  de:	40 f2       	brcs	.-112    	; 0x70 <__SREG__+0x31>
  e0:	ba a5       	ldd	r27, Y+42	; 0x2a
  e2:	6f a5       	ldd	r22, Y+47	; 0x2f
  e4:	f4 90       	lpm	r15, Z+
  e6:	05 5a       	subi	r16, 0xA5	; 165
  e8:	2a f7       	brpl	.-54     	; 0xb4 <__SREG__+0x75>
  ea:	5c 93       	st	X, r21
  ec:	6b 6c       	ori	r22, 0xCB	; 203
  ee:	f9 67       	ori	r31, 0x79	; 121
  f0:	6d c1       	rjmp	.+730    	; 0x3cc <__divsf3_pse+0x8e>
  f2:	1b fc       	.word	0xfc1b	; ????
  f4:	e0 e4       	ldi	r30, 0x40	; 64
  f6:	0d 47       	sbci	r16, 0x7D	; 125
  f8:	fe f5       	brtc	.+126    	; 0x178 <.do_clear_bss_loop>
  fa:	20 e6       	ldi	r18, 0x60	; 96
  fc:	b5 00       	.word	0x00b5	; ????
  fe:	d0 ed       	ldi	r29, 0xD0	; 208
 100:	90 2e       	mov	r9, r16
 102:	03 00       	.word	0x0003	; ????
 104:	94 35       	cpi	r25, 0x54	; 84
 106:	77 05       	cpc	r23, r7
 108:	00 80       	ld	r0, Z
 10a:	84 1e       	adc	r8, r20
 10c:	08 00       	.word	0x0008	; ????
 10e:	00 20       	and	r0, r0
 110:	4e 0a       	sbc	r4, r30
 112:	00 00       	nop
 114:	00 c8       	rjmp	.-4096   	; 0xfffff116 <__eeprom_end+0xff7ef116>
 116:	0c 33       	cpi	r16, 0x3C	; 60
 118:	33 33       	cpi	r19, 0x33	; 51
 11a:	33 0f       	add	r19, r19
 11c:	98 6e       	ori	r25, 0xE8	; 232
 11e:	12 83       	std	Z+2, r17	; 0x02
 120:	11 41       	sbci	r17, 0x11	; 17
 122:	ef 8d       	ldd	r30, Y+31	; 0x1f
 124:	21 14       	cp	r2, r1
 126:	89 3b       	cpi	r24, 0xB9	; 185
 128:	e6 55       	subi	r30, 0x56	; 86
 12a:	16 cf       	rjmp	.-468    	; 0xffffff58 <__eeprom_end+0xff7eff58>
 12c:	fe e6       	ldi	r31, 0x6E	; 110
 12e:	db 18       	sub	r13, r11
 130:	d1 84       	ldd	r13, Z+9	; 0x09
 132:	4b 38       	cpi	r20, 0x8B	; 139
 134:	1b f7       	brvc	.-58     	; 0xfc <__SREG__+0xbd>
 136:	7c 1d       	adc	r23, r12
 138:	90 1d       	adc	r25, r0
 13a:	a4 bb       	out	0x14, r26	; 20
 13c:	e4 24       	eor	r14, r4
 13e:	20 32       	cpi	r18, 0x20	; 32
 140:	84 72       	andi	r24, 0x24	; 36
 142:	5e 22       	and	r5, r30
 144:	81 00       	.word	0x0081	; ????
 146:	c9 f1       	breq	.+114    	; 0x1ba <LCD_Char+0x12>
 148:	24 ec       	ldi	r18, 0xC4	; 196
 14a:	a1 e5       	ldi	r26, 0x51	; 81
 14c:	3d 27       	eor	r19, r29

0000014e <__ctors_end>:
 14e:	11 24       	eor	r1, r1
 150:	1f be       	out	0x3f, r1	; 63
 152:	cf e5       	ldi	r28, 0x5F	; 95
 154:	d8 e0       	ldi	r29, 0x08	; 8
 156:	de bf       	out	0x3e, r29	; 62
 158:	cd bf       	out	0x3d, r28	; 61

0000015a <__do_copy_data>:
 15a:	10 e0       	ldi	r17, 0x00	; 0
 15c:	a0 e6       	ldi	r26, 0x60	; 96
 15e:	b0 e0       	ldi	r27, 0x00	; 0
 160:	ea e4       	ldi	r30, 0x4A	; 74
 162:	fa e0       	ldi	r31, 0x0A	; 10
 164:	02 c0       	rjmp	.+4      	; 0x16a <.do_copy_data_start>

00000166 <.do_copy_data_loop>:
 166:	05 90       	lpm	r0, Z+
 168:	0d 92       	st	X+, r0

0000016a <.do_copy_data_start>:
 16a:	aa 37       	cpi	r26, 0x7A	; 122
 16c:	b1 07       	cpc	r27, r17
 16e:	d9 f7       	brne	.-10     	; 0x166 <.do_copy_data_loop>

00000170 <__do_clear_bss>:
 170:	10 e0       	ldi	r17, 0x00	; 0
 172:	aa e7       	ldi	r26, 0x7A	; 122
 174:	b0 e0       	ldi	r27, 0x00	; 0
 176:	01 c0       	rjmp	.+2      	; 0x17a <.do_clear_bss_start>

00000178 <.do_clear_bss_loop>:
 178:	1d 92       	st	X+, r1

0000017a <.do_clear_bss_start>:
 17a:	ac 37       	cpi	r26, 0x7C	; 124
 17c:	b1 07       	cpc	r27, r17
 17e:	e1 f7       	brne	.-8      	; 0x178 <.do_clear_bss_loop>
 180:	0e 94 24 01 	call	0x248	; 0x248 <main>
 184:	0c 94 23 05 	jmp	0xa46	; 0xa46 <_exit>

00000188 <__bad_interrupt>:
 188:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000018c <LCD_Command>:
#include "lcd.h"						/* Include LCD header file */


void LCD_Command (char cmd)							/* LCD command write function */
{
	LCD_Data_Port = cmd;							/* Write command data to LCD data port */
 18c:	8b bb       	out	0x1b, r24	; 27
	LCD_Command_Port &= ~((1<<RS)|(1<<RW));			/* Make RS LOW (command reg.), RW LOW (Write) */
 18e:	85 b3       	in	r24, 0x15	; 21
 190:	8c 7f       	andi	r24, 0xFC	; 252
 192:	85 bb       	out	0x15, r24	; 21
	LCD_Command_Port |= (1<<EN);					/* High to Low transition on EN (Enable) */
 194:	aa 9a       	sbi	0x15, 2	; 21
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
 196:	82 e0       	ldi	r24, 0x02	; 2
 198:	8a 95       	dec	r24
 19a:	f1 f7       	brne	.-4      	; 0x198 <LCD_Command+0xc>
	_delay_us(1);
	LCD_Command_Port &= ~(1<<EN);
 19c:	aa 98       	cbi	0x15, 2	; 21
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
 19e:	80 e7       	ldi	r24, 0x70	; 112
 1a0:	97 e1       	ldi	r25, 0x17	; 23
 1a2:	01 97       	sbiw	r24, 0x01	; 1
 1a4:	f1 f7       	brne	.-4      	; 0x1a2 <LCD_Command+0x16>
	_delay_ms(3);									/* Wait little bit */
}
 1a6:	08 95       	ret

000001a8 <LCD_Char>:

void LCD_Char (char char_data)						/* LCD data write function */
{
	LCD_Data_Port = char_data;						/* Write data to LCD data port */
 1a8:	8b bb       	out	0x1b, r24	; 27
	LCD_Command_Port &= ~(1<<RW);					/* Make RW LOW (Write) */
 1aa:	a9 98       	cbi	0x15, 1	; 21
	LCD_Command_Port |= (1<<EN)|(1<<RS);			/* Make RS HIGH (data reg.) and High to Low transition on EN (Enable) */
 1ac:	85 b3       	in	r24, 0x15	; 21
 1ae:	85 60       	ori	r24, 0x05	; 5
 1b0:	85 bb       	out	0x15, r24	; 21
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
 1b2:	82 e0       	ldi	r24, 0x02	; 2
 1b4:	8a 95       	dec	r24
 1b6:	f1 f7       	brne	.-4      	; 0x1b4 <LCD_Char+0xc>
	_delay_us(1);
	LCD_Command_Port &= ~(1<<EN);
 1b8:	aa 98       	cbi	0x15, 2	; 21
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
 1ba:	80 ed       	ldi	r24, 0xD0	; 208
 1bc:	97 e0       	ldi	r25, 0x07	; 7
 1be:	01 97       	sbiw	r24, 0x01	; 1
 1c0:	f1 f7       	brne	.-4      	; 0x1be <LCD_Char+0x16>
	_delay_ms(1);									/* Wait little bit */
}
 1c2:	08 95       	ret

000001c4 <LCD_Init>:

void LCD_Init (void)								/* LCD Initialize function */
{
	LCD_Command_Dir |= (1<<RS)|(1<<RW)|(1<<EN);		/* Make LCD command port direction as o/p */
 1c4:	84 b3       	in	r24, 0x14	; 20
 1c6:	87 60       	ori	r24, 0x07	; 7
 1c8:	84 bb       	out	0x14, r24	; 20
	LCD_Data_Dir = 0xFF;							/* Make LCD data port direction as o/p */
 1ca:	8f ef       	ldi	r24, 0xFF	; 255
 1cc:	8a bb       	out	0x1a, r24	; 26
 1ce:	80 e4       	ldi	r24, 0x40	; 64
 1d0:	9c e9       	ldi	r25, 0x9C	; 156
 1d2:	01 97       	sbiw	r24, 0x01	; 1
 1d4:	f1 f7       	brne	.-4      	; 0x1d2 <LCD_Init+0xe>
	
	_delay_ms(20);									/* LCD power up time to get things ready, it should always >15ms */
	LCD_Command (0x38);								/* Initialize 16X2 LCD in 8bit mode */
 1d6:	88 e3       	ldi	r24, 0x38	; 56
 1d8:	0e 94 c6 00 	call	0x18c	; 0x18c <LCD_Command>
	LCD_Command (0x0C);								/* Display ON, Cursor OFF command */
 1dc:	8c e0       	ldi	r24, 0x0C	; 12
 1de:	0e 94 c6 00 	call	0x18c	; 0x18c <LCD_Command>
	LCD_Command (0x06);								/* Auto Increment cursor */
 1e2:	86 e0       	ldi	r24, 0x06	; 6
 1e4:	0e 94 c6 00 	call	0x18c	; 0x18c <LCD_Command>
	LCD_Command (0x01);								/* Clear LCD command */
 1e8:	81 e0       	ldi	r24, 0x01	; 1
 1ea:	0e 94 c6 00 	call	0x18c	; 0x18c <LCD_Command>
	LCD_Command (0x80);								/* 8 is for first line and 0 is for 0th position */
 1ee:	80 e8       	ldi	r24, 0x80	; 128
 1f0:	0e 94 c6 00 	call	0x18c	; 0x18c <LCD_Command>
}
 1f4:	08 95       	ret

000001f6 <LCD_String>:

void LCD_String (char *str)							/* Send string to LCD function */
{
 1f6:	cf 93       	push	r28
 1f8:	df 93       	push	r29
 1fa:	ec 01       	movw	r28, r24
 1fc:	02 c0       	rjmp	.+4      	; 0x202 <LCD_String+0xc>
	int i;
	for(i=0;str[i]!=0;i++)							/* Send each char of string till the NULL */
	{
		LCD_Char (str[i]);							/* Call LCD data write */
 1fe:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <LCD_Char>
}

void LCD_String (char *str)							/* Send string to LCD function */
{
	int i;
	for(i=0;str[i]!=0;i++)							/* Send each char of string till the NULL */
 202:	89 91       	ld	r24, Y+
 204:	88 23       	and	r24, r24
 206:	d9 f7       	brne	.-10     	; 0x1fe <LCD_String+0x8>
	{
		LCD_Char (str[i]);							/* Call LCD data write */
	}
}
 208:	df 91       	pop	r29
 20a:	cf 91       	pop	r28
 20c:	08 95       	ret

0000020e <LCD_String_xy>:

void LCD_String_xy (char row, char pos, char *str)	/* Send string to LCD function */
{
 20e:	cf 93       	push	r28
 210:	df 93       	push	r29
 212:	ea 01       	movw	r28, r20
	if (row == 1)
 214:	81 30       	cpi	r24, 0x01	; 1
 216:	21 f4       	brne	.+8      	; 0x220 <LCD_String_xy+0x12>
		LCD_Command((pos & 0x0F)|0x80);				/* Command of first row and required position<16 */
 218:	6f 70       	andi	r22, 0x0F	; 15
 21a:	86 2f       	mov	r24, r22
 21c:	80 68       	ori	r24, 0x80	; 128
 21e:	05 c0       	rjmp	.+10     	; 0x22a <LCD_String_xy+0x1c>
	else if (row == 2)
 220:	82 30       	cpi	r24, 0x02	; 2
 222:	29 f4       	brne	.+10     	; 0x22e <LCD_String_xy+0x20>
		LCD_Command((pos & 0x0F)|0xC0);				/* Command of Second row and required position<16 */
 224:	6f 70       	andi	r22, 0x0F	; 15
 226:	86 2f       	mov	r24, r22
 228:	80 6c       	ori	r24, 0xC0	; 192
 22a:	0e 94 c6 00 	call	0x18c	; 0x18c <LCD_Command>
	LCD_String(str);								/* Call LCD string function */
 22e:	ce 01       	movw	r24, r28
 230:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <LCD_String>
}
 234:	df 91       	pop	r29
 236:	cf 91       	pop	r28
 238:	08 95       	ret

0000023a <LCD_Clear>:

void LCD_Clear (void)								/* LCD clear function */
{
	LCD_Command (0x01);								/* Clear LCD command */
 23a:	81 e0       	ldi	r24, 0x01	; 1
 23c:	0e 94 c6 00 	call	0x18c	; 0x18c <LCD_Command>
	LCD_Command (0x80);								/* 8 is for first line and 0 is for 0th position */
 240:	80 e8       	ldi	r24, 0x80	; 128
 242:	0e 94 c6 00 	call	0x18c	; 0x18c <LCD_Command>
}
 246:	08 95       	ret

00000248 <main>:




int main(void)
{
 248:	9f 92       	push	r9
 24a:	af 92       	push	r10
 24c:	bf 92       	push	r11
 24e:	cf 92       	push	r12
 250:	df 92       	push	r13
 252:	ef 92       	push	r14
 254:	ff 92       	push	r15
 256:	0f 93       	push	r16
 258:	1f 93       	push	r17
 25a:	df 93       	push	r29
 25c:	cf 93       	push	r28
 25e:	cd b7       	in	r28, 0x3d	; 61
 260:	de b7       	in	r29, 0x3e	; 62
 262:	2a 97       	sbiw	r28, 0x0a	; 10
 264:	0f b6       	in	r0, 0x3f	; 63
 266:	f8 94       	cli
 268:	de bf       	out	0x3e, r29	; 62
 26a:	0f be       	out	0x3f, r0	; 63
 26c:	cd bf       	out	0x3d, r28	; 61
	char string[10];
	long count;
	double distance;
	
	DDRD = 0x01;		/* Make trigger pin as output */
 26e:	81 e0       	ldi	r24, 0x01	; 1
 270:	81 bb       	out	0x11, r24	; 17
	PORTD = 0xFF;		/* Turn on Pull-up */
 272:	8f ef       	ldi	r24, 0xFF	; 255
 274:	82 bb       	out	0x12, r24	; 18
	
	LCD_Init();
 276:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <LCD_Init>
	LCD_String_xy(1, 0, "Ultrasonic");
 27a:	81 e0       	ldi	r24, 0x01	; 1
 27c:	60 e0       	ldi	r22, 0x00	; 0
 27e:	40 e6       	ldi	r20, 0x60	; 96
 280:	50 e0       	ldi	r21, 0x00	; 0
 282:	0e 94 07 01 	call	0x20e	; 0x20e <LCD_String_xy>
	
	sei();			/* Enable global interrupt */
 286:	78 94       	sei
	TIMSK = (1 << TOIE1);	/* Enable Timer1 overflow interrupts */
 288:	84 e0       	ldi	r24, 0x04	; 4
 28a:	89 bf       	out	0x39, r24	; 57
	TCCR1A = 0;		/* Set all bit to zero Normal operation */
 28c:	1f bc       	out	0x2f, r1	; 47
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
 28e:	3a e1       	ldi	r19, 0x1A	; 26
 290:	93 2e       	mov	r9, r19
		PORTD |= (1 << Trigger_pin);
		_delay_us(10);
		PORTD &= (~(1 << Trigger_pin));
		
		TCNT1 = 0;	/* Clear Timer counter */
		TCCR1B = 0x41;	/* Capture on rising edge, No prescaler*/
 292:	21 e4       	ldi	r18, 0x41	; 65
 294:	a2 2e       	mov	r10, r18
		TIFR = 1<<ICF1;	/* Clear ICP flag (Input Capture flag) */
 296:	90 e2       	ldi	r25, 0x20	; 32
 298:	c9 2e       	mov	r12, r25
		TIFR = 1<<TOV1;	/* Clear Timer Overflow flag */
 29a:	84 e0       	ldi	r24, 0x04	; 4
 29c:	d8 2e       	mov	r13, r24
        
		/*Calculate width of Echo by Input Capture (ICP) */
		
		while ((TIFR & (1 << ICF1)) == 0);/* Wait for rising edge */
		TCNT1 = 0;	/* Clear Timer counter */
		TCCR1B = 0x01;	/* Capture on falling edge, No prescaler */
 29e:	bb 24       	eor	r11, r11
 2a0:	b3 94       	inc	r11
		while ((TIFR & (1 << ICF1)) == 0);/* Wait for falling edge */
		count = ICR1 + (65535 * TimerOverflow);	/* Take count */
		/* 8MHz Timer freq, sound speed =343 m/s */
		distance = (double)count / 466.47;

		dtostrf(distance, 2, 2, string);/* distance to string */
 2a2:	7e 01       	movw	r14, r28
 2a4:	08 94       	sec
 2a6:	e1 1c       	adc	r14, r1
 2a8:	f1 1c       	adc	r15, r1
	TCCR1A = 0;		/* Set all bit to zero Normal operation */

	while(1)
	{   
		/* Give 10us trigger pulse on trig. pin to HC-SR04 */
		PORTD |= (1 << Trigger_pin);
 2aa:	90 9a       	sbi	0x12, 0	; 18
 2ac:	89 2d       	mov	r24, r9
 2ae:	8a 95       	dec	r24
 2b0:	f1 f7       	brne	.-4      	; 0x2ae <main+0x66>
		_delay_us(10);
		PORTD &= (~(1 << Trigger_pin));
 2b2:	90 98       	cbi	0x12, 0	; 18
		
		TCNT1 = 0;	/* Clear Timer counter */
 2b4:	1d bc       	out	0x2d, r1	; 45
 2b6:	1c bc       	out	0x2c, r1	; 44
		TCCR1B = 0x41;	/* Capture on rising edge, No prescaler*/
 2b8:	ae bc       	out	0x2e, r10	; 46
		TIFR = 1<<ICF1;	/* Clear ICP flag (Input Capture flag) */
 2ba:	c8 be       	out	0x38, r12	; 56
		TIFR = 1<<TOV1;	/* Clear Timer Overflow flag */
 2bc:	d8 be       	out	0x38, r13	; 56
        
		/*Calculate width of Echo by Input Capture (ICP) */
		
		while ((TIFR & (1 << ICF1)) == 0);/* Wait for rising edge */
 2be:	08 b6       	in	r0, 0x38	; 56
 2c0:	05 fe       	sbrs	r0, 5
 2c2:	fd cf       	rjmp	.-6      	; 0x2be <main+0x76>
		TCNT1 = 0;	/* Clear Timer counter */
 2c4:	1d bc       	out	0x2d, r1	; 45
 2c6:	1c bc       	out	0x2c, r1	; 44
		TCCR1B = 0x01;	/* Capture on falling edge, No prescaler */
 2c8:	be bc       	out	0x2e, r11	; 46
		TIFR = 1<<ICF1;	/* Clear ICP flag (Input Capture flag) */
 2ca:	c8 be       	out	0x38, r12	; 56
		TIFR = 1<<TOV1;	/* Clear Timer Overflow flag */
 2cc:	d8 be       	out	0x38, r13	; 56
		TimerOverflow = 0;/* Clear Timer overflow count */
 2ce:	10 92 7b 00 	sts	0x007B, r1
 2d2:	10 92 7a 00 	sts	0x007A, r1
        
		while ((TIFR & (1 << ICF1)) == 0);/* Wait for falling edge */
 2d6:	08 b6       	in	r0, 0x38	; 56
 2d8:	05 fe       	sbrs	r0, 5
 2da:	fd cf       	rjmp	.-6      	; 0x2d6 <main+0x8e>
		count = ICR1 + (65535 * TimerOverflow);	/* Take count */
 2dc:	66 b5       	in	r22, 0x26	; 38
 2de:	77 b5       	in	r23, 0x27	; 39
		/* 8MHz Timer freq, sound speed =343 m/s */
		distance = (double)count / 466.47;

		dtostrf(distance, 2, 2, string);/* distance to string */
 2e0:	80 e0       	ldi	r24, 0x00	; 0
 2e2:	90 e0       	ldi	r25, 0x00	; 0
 2e4:	0e 94 fa 01 	call	0x3f4	; 0x3f4 <__floatsisf>
 2e8:	29 e2       	ldi	r18, 0x29	; 41
 2ea:	3c e3       	ldi	r19, 0x3C	; 60
 2ec:	49 ee       	ldi	r20, 0xE9	; 233
 2ee:	53 e4       	ldi	r21, 0x43	; 67
 2f0:	0e 94 90 01 	call	0x320	; 0x320 <__divsf3>
 2f4:	42 e0       	ldi	r20, 0x02	; 2
 2f6:	22 e0       	ldi	r18, 0x02	; 2
 2f8:	87 01       	movw	r16, r14
 2fa:	0e 94 86 02 	call	0x50c	; 0x50c <dtostrf>
		strcat(string, " cm   ");	/* Concat unit i.e.cm */
 2fe:	c7 01       	movw	r24, r14
 300:	6b e6       	ldi	r22, 0x6B	; 107
 302:	70 e0       	ldi	r23, 0x00	; 0
 304:	0e 94 a7 02 	call	0x54e	; 0x54e <strcat>
		LCD_String_xy(2, 0, "Dist = ");
 308:	82 e0       	ldi	r24, 0x02	; 2
 30a:	60 e0       	ldi	r22, 0x00	; 0
 30c:	42 e7       	ldi	r20, 0x72	; 114
 30e:	50 e0       	ldi	r21, 0x00	; 0
 310:	0e 94 07 01 	call	0x20e	; 0x20e <LCD_String_xy>
		LCD_String_xy(2, 7, string);	/* Print distance */
 314:	82 e0       	ldi	r24, 0x02	; 2
 316:	67 e0       	ldi	r22, 0x07	; 7
 318:	a7 01       	movw	r20, r14
 31a:	0e 94 07 01 	call	0x20e	; 0x20e <LCD_String_xy>
 31e:	c5 cf       	rjmp	.-118    	; 0x2aa <main+0x62>

00000320 <__divsf3>:
 320:	0c d0       	rcall	.+24     	; 0x33a <__divsf3x>
 322:	ba c0       	rjmp	.+372    	; 0x498 <__fp_round>
 324:	b2 d0       	rcall	.+356    	; 0x48a <__fp_pscB>
 326:	40 f0       	brcs	.+16     	; 0x338 <__divsf3+0x18>
 328:	a9 d0       	rcall	.+338    	; 0x47c <__fp_pscA>
 32a:	30 f0       	brcs	.+12     	; 0x338 <__divsf3+0x18>
 32c:	21 f4       	brne	.+8      	; 0x336 <__divsf3+0x16>
 32e:	5f 3f       	cpi	r21, 0xFF	; 255
 330:	19 f0       	breq	.+6      	; 0x338 <__divsf3+0x18>
 332:	9b c0       	rjmp	.+310    	; 0x46a <__fp_inf>
 334:	51 11       	cpse	r21, r1
 336:	e4 c0       	rjmp	.+456    	; 0x500 <__fp_szero>
 338:	9e c0       	rjmp	.+316    	; 0x476 <__fp_nan>

0000033a <__divsf3x>:
 33a:	bf d0       	rcall	.+382    	; 0x4ba <__fp_split3>
 33c:	98 f3       	brcs	.-26     	; 0x324 <__divsf3+0x4>

0000033e <__divsf3_pse>:
 33e:	99 23       	and	r25, r25
 340:	c9 f3       	breq	.-14     	; 0x334 <__divsf3+0x14>
 342:	55 23       	and	r21, r21
 344:	b1 f3       	breq	.-20     	; 0x332 <__divsf3+0x12>
 346:	95 1b       	sub	r25, r21
 348:	55 0b       	sbc	r21, r21
 34a:	bb 27       	eor	r27, r27
 34c:	aa 27       	eor	r26, r26
 34e:	62 17       	cp	r22, r18
 350:	73 07       	cpc	r23, r19
 352:	84 07       	cpc	r24, r20
 354:	38 f0       	brcs	.+14     	; 0x364 <__divsf3_pse+0x26>
 356:	9f 5f       	subi	r25, 0xFF	; 255
 358:	5f 4f       	sbci	r21, 0xFF	; 255
 35a:	22 0f       	add	r18, r18
 35c:	33 1f       	adc	r19, r19
 35e:	44 1f       	adc	r20, r20
 360:	aa 1f       	adc	r26, r26
 362:	a9 f3       	breq	.-22     	; 0x34e <__divsf3_pse+0x10>
 364:	33 d0       	rcall	.+102    	; 0x3cc <__divsf3_pse+0x8e>
 366:	0e 2e       	mov	r0, r30
 368:	3a f0       	brmi	.+14     	; 0x378 <__divsf3_pse+0x3a>
 36a:	e0 e8       	ldi	r30, 0x80	; 128
 36c:	30 d0       	rcall	.+96     	; 0x3ce <__divsf3_pse+0x90>
 36e:	91 50       	subi	r25, 0x01	; 1
 370:	50 40       	sbci	r21, 0x00	; 0
 372:	e6 95       	lsr	r30
 374:	00 1c       	adc	r0, r0
 376:	ca f7       	brpl	.-14     	; 0x36a <__divsf3_pse+0x2c>
 378:	29 d0       	rcall	.+82     	; 0x3cc <__divsf3_pse+0x8e>
 37a:	fe 2f       	mov	r31, r30
 37c:	27 d0       	rcall	.+78     	; 0x3cc <__divsf3_pse+0x8e>
 37e:	66 0f       	add	r22, r22
 380:	77 1f       	adc	r23, r23
 382:	88 1f       	adc	r24, r24
 384:	bb 1f       	adc	r27, r27
 386:	26 17       	cp	r18, r22
 388:	37 07       	cpc	r19, r23
 38a:	48 07       	cpc	r20, r24
 38c:	ab 07       	cpc	r26, r27
 38e:	b0 e8       	ldi	r27, 0x80	; 128
 390:	09 f0       	breq	.+2      	; 0x394 <__divsf3_pse+0x56>
 392:	bb 0b       	sbc	r27, r27
 394:	80 2d       	mov	r24, r0
 396:	bf 01       	movw	r22, r30
 398:	ff 27       	eor	r31, r31
 39a:	93 58       	subi	r25, 0x83	; 131
 39c:	5f 4f       	sbci	r21, 0xFF	; 255
 39e:	2a f0       	brmi	.+10     	; 0x3aa <__divsf3_pse+0x6c>
 3a0:	9e 3f       	cpi	r25, 0xFE	; 254
 3a2:	51 05       	cpc	r21, r1
 3a4:	68 f0       	brcs	.+26     	; 0x3c0 <__divsf3_pse+0x82>
 3a6:	61 c0       	rjmp	.+194    	; 0x46a <__fp_inf>
 3a8:	ab c0       	rjmp	.+342    	; 0x500 <__fp_szero>
 3aa:	5f 3f       	cpi	r21, 0xFF	; 255
 3ac:	ec f3       	brlt	.-6      	; 0x3a8 <__divsf3_pse+0x6a>
 3ae:	98 3e       	cpi	r25, 0xE8	; 232
 3b0:	dc f3       	brlt	.-10     	; 0x3a8 <__divsf3_pse+0x6a>
 3b2:	86 95       	lsr	r24
 3b4:	77 95       	ror	r23
 3b6:	67 95       	ror	r22
 3b8:	b7 95       	ror	r27
 3ba:	f7 95       	ror	r31
 3bc:	9f 5f       	subi	r25, 0xFF	; 255
 3be:	c9 f7       	brne	.-14     	; 0x3b2 <__divsf3_pse+0x74>
 3c0:	88 0f       	add	r24, r24
 3c2:	91 1d       	adc	r25, r1
 3c4:	96 95       	lsr	r25
 3c6:	87 95       	ror	r24
 3c8:	97 f9       	bld	r25, 7
 3ca:	08 95       	ret
 3cc:	e1 e0       	ldi	r30, 0x01	; 1
 3ce:	66 0f       	add	r22, r22
 3d0:	77 1f       	adc	r23, r23
 3d2:	88 1f       	adc	r24, r24
 3d4:	bb 1f       	adc	r27, r27
 3d6:	62 17       	cp	r22, r18
 3d8:	73 07       	cpc	r23, r19
 3da:	84 07       	cpc	r24, r20
 3dc:	ba 07       	cpc	r27, r26
 3de:	20 f0       	brcs	.+8      	; 0x3e8 <__divsf3_pse+0xaa>
 3e0:	62 1b       	sub	r22, r18
 3e2:	73 0b       	sbc	r23, r19
 3e4:	84 0b       	sbc	r24, r20
 3e6:	ba 0b       	sbc	r27, r26
 3e8:	ee 1f       	adc	r30, r30
 3ea:	88 f7       	brcc	.-30     	; 0x3ce <__divsf3_pse+0x90>
 3ec:	e0 95       	com	r30
 3ee:	08 95       	ret

000003f0 <__floatunsisf>:
 3f0:	e8 94       	clt
 3f2:	09 c0       	rjmp	.+18     	; 0x406 <__floatsisf+0x12>

000003f4 <__floatsisf>:
 3f4:	97 fb       	bst	r25, 7
 3f6:	3e f4       	brtc	.+14     	; 0x406 <__floatsisf+0x12>
 3f8:	90 95       	com	r25
 3fa:	80 95       	com	r24
 3fc:	70 95       	com	r23
 3fe:	61 95       	neg	r22
 400:	7f 4f       	sbci	r23, 0xFF	; 255
 402:	8f 4f       	sbci	r24, 0xFF	; 255
 404:	9f 4f       	sbci	r25, 0xFF	; 255
 406:	99 23       	and	r25, r25
 408:	a9 f0       	breq	.+42     	; 0x434 <__floatsisf+0x40>
 40a:	f9 2f       	mov	r31, r25
 40c:	96 e9       	ldi	r25, 0x96	; 150
 40e:	bb 27       	eor	r27, r27
 410:	93 95       	inc	r25
 412:	f6 95       	lsr	r31
 414:	87 95       	ror	r24
 416:	77 95       	ror	r23
 418:	67 95       	ror	r22
 41a:	b7 95       	ror	r27
 41c:	f1 11       	cpse	r31, r1
 41e:	f8 cf       	rjmp	.-16     	; 0x410 <__floatsisf+0x1c>
 420:	fa f4       	brpl	.+62     	; 0x460 <__floatsisf+0x6c>
 422:	bb 0f       	add	r27, r27
 424:	11 f4       	brne	.+4      	; 0x42a <__floatsisf+0x36>
 426:	60 ff       	sbrs	r22, 0
 428:	1b c0       	rjmp	.+54     	; 0x460 <__floatsisf+0x6c>
 42a:	6f 5f       	subi	r22, 0xFF	; 255
 42c:	7f 4f       	sbci	r23, 0xFF	; 255
 42e:	8f 4f       	sbci	r24, 0xFF	; 255
 430:	9f 4f       	sbci	r25, 0xFF	; 255
 432:	16 c0       	rjmp	.+44     	; 0x460 <__floatsisf+0x6c>
 434:	88 23       	and	r24, r24
 436:	11 f0       	breq	.+4      	; 0x43c <__floatsisf+0x48>
 438:	96 e9       	ldi	r25, 0x96	; 150
 43a:	11 c0       	rjmp	.+34     	; 0x45e <__floatsisf+0x6a>
 43c:	77 23       	and	r23, r23
 43e:	21 f0       	breq	.+8      	; 0x448 <__floatsisf+0x54>
 440:	9e e8       	ldi	r25, 0x8E	; 142
 442:	87 2f       	mov	r24, r23
 444:	76 2f       	mov	r23, r22
 446:	05 c0       	rjmp	.+10     	; 0x452 <__floatsisf+0x5e>
 448:	66 23       	and	r22, r22
 44a:	71 f0       	breq	.+28     	; 0x468 <__floatsisf+0x74>
 44c:	96 e8       	ldi	r25, 0x86	; 134
 44e:	86 2f       	mov	r24, r22
 450:	70 e0       	ldi	r23, 0x00	; 0
 452:	60 e0       	ldi	r22, 0x00	; 0
 454:	2a f0       	brmi	.+10     	; 0x460 <__floatsisf+0x6c>
 456:	9a 95       	dec	r25
 458:	66 0f       	add	r22, r22
 45a:	77 1f       	adc	r23, r23
 45c:	88 1f       	adc	r24, r24
 45e:	da f7       	brpl	.-10     	; 0x456 <__floatsisf+0x62>
 460:	88 0f       	add	r24, r24
 462:	96 95       	lsr	r25
 464:	87 95       	ror	r24
 466:	97 f9       	bld	r25, 7
 468:	08 95       	ret

0000046a <__fp_inf>:
 46a:	97 f9       	bld	r25, 7
 46c:	9f 67       	ori	r25, 0x7F	; 127
 46e:	80 e8       	ldi	r24, 0x80	; 128
 470:	70 e0       	ldi	r23, 0x00	; 0
 472:	60 e0       	ldi	r22, 0x00	; 0
 474:	08 95       	ret

00000476 <__fp_nan>:
 476:	9f ef       	ldi	r25, 0xFF	; 255
 478:	80 ec       	ldi	r24, 0xC0	; 192
 47a:	08 95       	ret

0000047c <__fp_pscA>:
 47c:	00 24       	eor	r0, r0
 47e:	0a 94       	dec	r0
 480:	16 16       	cp	r1, r22
 482:	17 06       	cpc	r1, r23
 484:	18 06       	cpc	r1, r24
 486:	09 06       	cpc	r0, r25
 488:	08 95       	ret

0000048a <__fp_pscB>:
 48a:	00 24       	eor	r0, r0
 48c:	0a 94       	dec	r0
 48e:	12 16       	cp	r1, r18
 490:	13 06       	cpc	r1, r19
 492:	14 06       	cpc	r1, r20
 494:	05 06       	cpc	r0, r21
 496:	08 95       	ret

00000498 <__fp_round>:
 498:	09 2e       	mov	r0, r25
 49a:	03 94       	inc	r0
 49c:	00 0c       	add	r0, r0
 49e:	11 f4       	brne	.+4      	; 0x4a4 <__fp_round+0xc>
 4a0:	88 23       	and	r24, r24
 4a2:	52 f0       	brmi	.+20     	; 0x4b8 <__fp_round+0x20>
 4a4:	bb 0f       	add	r27, r27
 4a6:	40 f4       	brcc	.+16     	; 0x4b8 <__fp_round+0x20>
 4a8:	bf 2b       	or	r27, r31
 4aa:	11 f4       	brne	.+4      	; 0x4b0 <__fp_round+0x18>
 4ac:	60 ff       	sbrs	r22, 0
 4ae:	04 c0       	rjmp	.+8      	; 0x4b8 <__fp_round+0x20>
 4b0:	6f 5f       	subi	r22, 0xFF	; 255
 4b2:	7f 4f       	sbci	r23, 0xFF	; 255
 4b4:	8f 4f       	sbci	r24, 0xFF	; 255
 4b6:	9f 4f       	sbci	r25, 0xFF	; 255
 4b8:	08 95       	ret

000004ba <__fp_split3>:
 4ba:	57 fd       	sbrc	r21, 7
 4bc:	90 58       	subi	r25, 0x80	; 128
 4be:	44 0f       	add	r20, r20
 4c0:	55 1f       	adc	r21, r21
 4c2:	59 f0       	breq	.+22     	; 0x4da <__fp_splitA+0x10>
 4c4:	5f 3f       	cpi	r21, 0xFF	; 255
 4c6:	71 f0       	breq	.+28     	; 0x4e4 <__fp_splitA+0x1a>
 4c8:	47 95       	ror	r20

000004ca <__fp_splitA>:
 4ca:	88 0f       	add	r24, r24
 4cc:	97 fb       	bst	r25, 7
 4ce:	99 1f       	adc	r25, r25
 4d0:	61 f0       	breq	.+24     	; 0x4ea <__fp_splitA+0x20>
 4d2:	9f 3f       	cpi	r25, 0xFF	; 255
 4d4:	79 f0       	breq	.+30     	; 0x4f4 <__fp_splitA+0x2a>
 4d6:	87 95       	ror	r24
 4d8:	08 95       	ret
 4da:	12 16       	cp	r1, r18
 4dc:	13 06       	cpc	r1, r19
 4de:	14 06       	cpc	r1, r20
 4e0:	55 1f       	adc	r21, r21
 4e2:	f2 cf       	rjmp	.-28     	; 0x4c8 <__fp_split3+0xe>
 4e4:	46 95       	lsr	r20
 4e6:	f1 df       	rcall	.-30     	; 0x4ca <__fp_splitA>
 4e8:	08 c0       	rjmp	.+16     	; 0x4fa <__fp_splitA+0x30>
 4ea:	16 16       	cp	r1, r22
 4ec:	17 06       	cpc	r1, r23
 4ee:	18 06       	cpc	r1, r24
 4f0:	99 1f       	adc	r25, r25
 4f2:	f1 cf       	rjmp	.-30     	; 0x4d6 <__fp_splitA+0xc>
 4f4:	86 95       	lsr	r24
 4f6:	71 05       	cpc	r23, r1
 4f8:	61 05       	cpc	r22, r1
 4fa:	08 94       	sec
 4fc:	08 95       	ret

000004fe <__fp_zero>:
 4fe:	e8 94       	clt

00000500 <__fp_szero>:
 500:	bb 27       	eor	r27, r27
 502:	66 27       	eor	r22, r22
 504:	77 27       	eor	r23, r23
 506:	cb 01       	movw	r24, r22
 508:	97 f9       	bld	r25, 7
 50a:	08 95       	ret

0000050c <dtostrf>:
 50c:	ef 92       	push	r14
 50e:	ff 92       	push	r15
 510:	0f 93       	push	r16
 512:	1f 93       	push	r17
 514:	f2 2f       	mov	r31, r18
 516:	f0 2e       	mov	r15, r16
 518:	47 fd       	sbrc	r20, 7
 51a:	02 c0       	rjmp	.+4      	; 0x520 <dtostrf+0x14>
 51c:	e4 e0       	ldi	r30, 0x04	; 4
 51e:	01 c0       	rjmp	.+2      	; 0x522 <dtostrf+0x16>
 520:	e4 e1       	ldi	r30, 0x14	; 20
 522:	24 2f       	mov	r18, r20
 524:	33 27       	eor	r19, r19
 526:	27 fd       	sbrc	r18, 7
 528:	30 95       	com	r19
 52a:	37 ff       	sbrs	r19, 7
 52c:	03 c0       	rjmp	.+6      	; 0x534 <dtostrf+0x28>
 52e:	30 95       	com	r19
 530:	21 95       	neg	r18
 532:	3f 4f       	sbci	r19, 0xFF	; 255
 534:	4f 2d       	mov	r20, r15
 536:	51 2f       	mov	r21, r17
 538:	0f 2f       	mov	r16, r31
 53a:	ee 2e       	mov	r14, r30
 53c:	0e 94 b2 02 	call	0x564	; 0x564 <dtoa_prf>
 540:	8f 2d       	mov	r24, r15
 542:	91 2f       	mov	r25, r17
 544:	1f 91       	pop	r17
 546:	0f 91       	pop	r16
 548:	ff 90       	pop	r15
 54a:	ef 90       	pop	r14
 54c:	08 95       	ret

0000054e <strcat>:
 54e:	fb 01       	movw	r30, r22
 550:	dc 01       	movw	r26, r24
 552:	0d 90       	ld	r0, X+
 554:	00 20       	and	r0, r0
 556:	e9 f7       	brne	.-6      	; 0x552 <strcat+0x4>
 558:	11 97       	sbiw	r26, 0x01	; 1
 55a:	01 90       	ld	r0, Z+
 55c:	0d 92       	st	X+, r0
 55e:	00 20       	and	r0, r0
 560:	e1 f7       	brne	.-8      	; 0x55a <strcat+0xc>
 562:	08 95       	ret

00000564 <dtoa_prf>:
 564:	a9 e0       	ldi	r26, 0x09	; 9
 566:	b0 e0       	ldi	r27, 0x00	; 0
 568:	e8 eb       	ldi	r30, 0xB8	; 184
 56a:	f2 e0       	ldi	r31, 0x02	; 2
 56c:	0c 94 f0 04 	jmp	0x9e0	; 0x9e0 <__prologue_saves__+0x8>
 570:	6a 01       	movw	r12, r20
 572:	12 2f       	mov	r17, r18
 574:	a0 2e       	mov	r10, r16
 576:	be 2c       	mov	r11, r14
 578:	2b e3       	ldi	r18, 0x3B	; 59
 57a:	20 17       	cp	r18, r16
 57c:	18 f4       	brcc	.+6      	; 0x584 <dtoa_prf+0x20>
 57e:	2c e3       	ldi	r18, 0x3C	; 60
 580:	92 2e       	mov	r9, r18
 582:	02 c0       	rjmp	.+4      	; 0x588 <dtoa_prf+0x24>
 584:	90 2e       	mov	r9, r16
 586:	93 94       	inc	r9
 588:	ae 01       	movw	r20, r28
 58a:	4f 5f       	subi	r20, 0xFF	; 255
 58c:	5f 4f       	sbci	r21, 0xFF	; 255
 58e:	27 e0       	ldi	r18, 0x07	; 7
 590:	09 2d       	mov	r16, r9
 592:	0e 94 14 04 	call	0x828	; 0x828 <__ftoa_engine>
 596:	bc 01       	movw	r22, r24
 598:	89 81       	ldd	r24, Y+1	; 0x01
 59a:	e8 2e       	mov	r14, r24
 59c:	ff 24       	eor	r15, r15
 59e:	c7 01       	movw	r24, r14
 5a0:	89 70       	andi	r24, 0x09	; 9
 5a2:	90 70       	andi	r25, 0x00	; 0
 5a4:	01 97       	sbiw	r24, 0x01	; 1
 5a6:	11 f4       	brne	.+4      	; 0x5ac <dtoa_prf+0x48>
 5a8:	ad e2       	ldi	r26, 0x2D	; 45
 5aa:	09 c0       	rjmp	.+18     	; 0x5be <dtoa_prf+0x5a>
 5ac:	b1 fe       	sbrs	r11, 1
 5ae:	02 c0       	rjmp	.+4      	; 0x5b4 <dtoa_prf+0x50>
 5b0:	ab e2       	ldi	r26, 0x2B	; 43
 5b2:	05 c0       	rjmp	.+10     	; 0x5be <dtoa_prf+0x5a>
 5b4:	b0 fc       	sbrc	r11, 0
 5b6:	02 c0       	rjmp	.+4      	; 0x5bc <dtoa_prf+0x58>
 5b8:	a0 e0       	ldi	r26, 0x00	; 0
 5ba:	01 c0       	rjmp	.+2      	; 0x5be <dtoa_prf+0x5a>
 5bc:	a0 e2       	ldi	r26, 0x20	; 32
 5be:	e3 fe       	sbrs	r14, 3
 5c0:	3b c0       	rjmp	.+118    	; 0x638 <dtoa_prf+0xd4>
 5c2:	aa 23       	and	r26, r26
 5c4:	11 f4       	brne	.+4      	; 0x5ca <dtoa_prf+0x66>
 5c6:	23 e0       	ldi	r18, 0x03	; 3
 5c8:	01 c0       	rjmp	.+2      	; 0x5cc <dtoa_prf+0x68>
 5ca:	24 e0       	ldi	r18, 0x04	; 4
 5cc:	21 17       	cp	r18, r17
 5ce:	10 f0       	brcs	.+4      	; 0x5d4 <dtoa_prf+0x70>
 5d0:	20 e0       	ldi	r18, 0x00	; 0
 5d2:	02 c0       	rjmp	.+4      	; 0x5d8 <dtoa_prf+0x74>
 5d4:	12 1b       	sub	r17, r18
 5d6:	21 2f       	mov	r18, r17
 5d8:	eb 2c       	mov	r14, r11
 5da:	b4 fe       	sbrs	r11, 4
 5dc:	02 c0       	rjmp	.+4      	; 0x5e2 <dtoa_prf+0x7e>
 5de:	32 2f       	mov	r19, r18
 5e0:	0a c0       	rjmp	.+20     	; 0x5f6 <dtoa_prf+0x92>
 5e2:	f6 01       	movw	r30, r12
 5e4:	32 2f       	mov	r19, r18
 5e6:	80 e2       	ldi	r24, 0x20	; 32
 5e8:	02 c0       	rjmp	.+4      	; 0x5ee <dtoa_prf+0x8a>
 5ea:	81 93       	st	Z+, r24
 5ec:	31 50       	subi	r19, 0x01	; 1
 5ee:	33 23       	and	r19, r19
 5f0:	e1 f7       	brne	.-8      	; 0x5ea <dtoa_prf+0x86>
 5f2:	c2 0e       	add	r12, r18
 5f4:	d1 1c       	adc	r13, r1
 5f6:	aa 23       	and	r26, r26
 5f8:	19 f0       	breq	.+6      	; 0x600 <dtoa_prf+0x9c>
 5fa:	f6 01       	movw	r30, r12
 5fc:	a1 93       	st	Z+, r26
 5fe:	6f 01       	movw	r12, r30
 600:	f6 01       	movw	r30, r12
 602:	31 96       	adiw	r30, 0x01	; 1
 604:	e2 fe       	sbrs	r14, 2
 606:	05 c0       	rjmp	.+10     	; 0x612 <dtoa_prf+0xae>
 608:	9e e4       	ldi	r25, 0x4E	; 78
 60a:	d6 01       	movw	r26, r12
 60c:	9c 93       	st	X, r25
 60e:	81 e4       	ldi	r24, 0x41	; 65
 610:	04 c0       	rjmp	.+8      	; 0x61a <dtoa_prf+0xb6>
 612:	9e e6       	ldi	r25, 0x6E	; 110
 614:	d6 01       	movw	r26, r12
 616:	9c 93       	st	X, r25
 618:	81 e6       	ldi	r24, 0x61	; 97
 61a:	11 96       	adiw	r26, 0x01	; 1
 61c:	8c 93       	st	X, r24
 61e:	91 83       	std	Z+1, r25	; 0x01
 620:	32 96       	adiw	r30, 0x02	; 2
 622:	df 01       	movw	r26, r30
 624:	83 2f       	mov	r24, r19
 626:	90 e2       	ldi	r25, 0x20	; 32
 628:	02 c0       	rjmp	.+4      	; 0x62e <dtoa_prf+0xca>
 62a:	9d 93       	st	X+, r25
 62c:	81 50       	subi	r24, 0x01	; 1
 62e:	88 23       	and	r24, r24
 630:	e1 f7       	brne	.-8      	; 0x62a <dtoa_prf+0xc6>
 632:	e3 0f       	add	r30, r19
 634:	f1 1d       	adc	r31, r1
 636:	40 c0       	rjmp	.+128    	; 0x6b8 <dtoa_prf+0x154>
 638:	e2 fe       	sbrs	r14, 2
 63a:	42 c0       	rjmp	.+132    	; 0x6c0 <dtoa_prf+0x15c>
 63c:	aa 23       	and	r26, r26
 63e:	11 f4       	brne	.+4      	; 0x644 <dtoa_prf+0xe0>
 640:	23 e0       	ldi	r18, 0x03	; 3
 642:	01 c0       	rjmp	.+2      	; 0x646 <dtoa_prf+0xe2>
 644:	24 e0       	ldi	r18, 0x04	; 4
 646:	21 17       	cp	r18, r17
 648:	10 f0       	brcs	.+4      	; 0x64e <dtoa_prf+0xea>
 64a:	20 e0       	ldi	r18, 0x00	; 0
 64c:	02 c0       	rjmp	.+4      	; 0x652 <dtoa_prf+0xee>
 64e:	12 1b       	sub	r17, r18
 650:	21 2f       	mov	r18, r17
 652:	eb 2c       	mov	r14, r11
 654:	b4 fe       	sbrs	r11, 4
 656:	02 c0       	rjmp	.+4      	; 0x65c <dtoa_prf+0xf8>
 658:	92 2f       	mov	r25, r18
 65a:	0a c0       	rjmp	.+20     	; 0x670 <dtoa_prf+0x10c>
 65c:	f6 01       	movw	r30, r12
 65e:	92 2f       	mov	r25, r18
 660:	80 e2       	ldi	r24, 0x20	; 32
 662:	02 c0       	rjmp	.+4      	; 0x668 <dtoa_prf+0x104>
 664:	81 93       	st	Z+, r24
 666:	91 50       	subi	r25, 0x01	; 1
 668:	99 23       	and	r25, r25
 66a:	e1 f7       	brne	.-8      	; 0x664 <dtoa_prf+0x100>
 66c:	c2 0e       	add	r12, r18
 66e:	d1 1c       	adc	r13, r1
 670:	aa 23       	and	r26, r26
 672:	19 f0       	breq	.+6      	; 0x67a <dtoa_prf+0x116>
 674:	f6 01       	movw	r30, r12
 676:	a1 93       	st	Z+, r26
 678:	6f 01       	movw	r12, r30
 67a:	f6 01       	movw	r30, r12
 67c:	31 96       	adiw	r30, 0x01	; 1
 67e:	e2 fe       	sbrs	r14, 2
 680:	08 c0       	rjmp	.+16     	; 0x692 <dtoa_prf+0x12e>
 682:	89 e4       	ldi	r24, 0x49	; 73
 684:	d6 01       	movw	r26, r12
 686:	8c 93       	st	X, r24
 688:	8e e4       	ldi	r24, 0x4E	; 78
 68a:	11 96       	adiw	r26, 0x01	; 1
 68c:	8c 93       	st	X, r24
 68e:	86 e4       	ldi	r24, 0x46	; 70
 690:	07 c0       	rjmp	.+14     	; 0x6a0 <dtoa_prf+0x13c>
 692:	89 e6       	ldi	r24, 0x69	; 105
 694:	d6 01       	movw	r26, r12
 696:	8c 93       	st	X, r24
 698:	8e e6       	ldi	r24, 0x6E	; 110
 69a:	11 96       	adiw	r26, 0x01	; 1
 69c:	8c 93       	st	X, r24
 69e:	86 e6       	ldi	r24, 0x66	; 102
 6a0:	81 83       	std	Z+1, r24	; 0x01
 6a2:	32 96       	adiw	r30, 0x02	; 2
 6a4:	df 01       	movw	r26, r30
 6a6:	89 2f       	mov	r24, r25
 6a8:	20 e2       	ldi	r18, 0x20	; 32
 6aa:	02 c0       	rjmp	.+4      	; 0x6b0 <dtoa_prf+0x14c>
 6ac:	2d 93       	st	X+, r18
 6ae:	81 50       	subi	r24, 0x01	; 1
 6b0:	88 23       	and	r24, r24
 6b2:	e1 f7       	brne	.-8      	; 0x6ac <dtoa_prf+0x148>
 6b4:	e9 0f       	add	r30, r25
 6b6:	f1 1d       	adc	r31, r1
 6b8:	10 82       	st	Z, r1
 6ba:	2e ef       	ldi	r18, 0xFE	; 254
 6bc:	3f ef       	ldi	r19, 0xFF	; 255
 6be:	af c0       	rjmp	.+350    	; 0x81e <dtoa_prf+0x2ba>
 6c0:	16 16       	cp	r1, r22
 6c2:	17 06       	cpc	r1, r23
 6c4:	1c f0       	brlt	.+6      	; 0x6cc <dtoa_prf+0x168>
 6c6:	41 e0       	ldi	r20, 0x01	; 1
 6c8:	50 e0       	ldi	r21, 0x00	; 0
 6ca:	03 c0       	rjmp	.+6      	; 0x6d2 <dtoa_prf+0x16e>
 6cc:	ab 01       	movw	r20, r22
 6ce:	4f 5f       	subi	r20, 0xFF	; 255
 6d0:	5f 4f       	sbci	r21, 0xFF	; 255
 6d2:	aa 20       	and	r10, r10
 6d4:	19 f4       	brne	.+6      	; 0x6dc <dtoa_prf+0x178>
 6d6:	80 e0       	ldi	r24, 0x00	; 0
 6d8:	90 e0       	ldi	r25, 0x00	; 0
 6da:	03 c0       	rjmp	.+6      	; 0x6e2 <dtoa_prf+0x17e>
 6dc:	8a 2d       	mov	r24, r10
 6de:	90 e0       	ldi	r25, 0x00	; 0
 6e0:	01 96       	adiw	r24, 0x01	; 1
 6e2:	20 e0       	ldi	r18, 0x00	; 0
 6e4:	30 e0       	ldi	r19, 0x00	; 0
 6e6:	aa 23       	and	r26, r26
 6e8:	11 f0       	breq	.+4      	; 0x6ee <dtoa_prf+0x18a>
 6ea:	21 e0       	ldi	r18, 0x01	; 1
 6ec:	30 e0       	ldi	r19, 0x00	; 0
 6ee:	24 0f       	add	r18, r20
 6f0:	35 1f       	adc	r19, r21
 6f2:	28 0f       	add	r18, r24
 6f4:	39 1f       	adc	r19, r25
 6f6:	81 2f       	mov	r24, r17
 6f8:	90 e0       	ldi	r25, 0x00	; 0
 6fa:	28 17       	cp	r18, r24
 6fc:	39 07       	cpc	r19, r25
 6fe:	14 f0       	brlt	.+4      	; 0x704 <dtoa_prf+0x1a0>
 700:	20 e0       	ldi	r18, 0x00	; 0
 702:	02 c0       	rjmp	.+4      	; 0x708 <dtoa_prf+0x1a4>
 704:	12 1b       	sub	r17, r18
 706:	21 2f       	mov	r18, r17
 708:	4b 2d       	mov	r20, r11
 70a:	50 e0       	ldi	r21, 0x00	; 0
 70c:	ca 01       	movw	r24, r20
 70e:	80 71       	andi	r24, 0x10	; 16
 710:	90 70       	andi	r25, 0x00	; 0
 712:	b4 fc       	sbrc	r11, 4
 714:	0d c0       	rjmp	.+26     	; 0x730 <dtoa_prf+0x1cc>
 716:	b3 fc       	sbrc	r11, 3
 718:	0b c0       	rjmp	.+22     	; 0x730 <dtoa_prf+0x1cc>
 71a:	f6 01       	movw	r30, r12
 71c:	32 2f       	mov	r19, r18
 71e:	40 e2       	ldi	r20, 0x20	; 32
 720:	02 c0       	rjmp	.+4      	; 0x726 <dtoa_prf+0x1c2>
 722:	41 93       	st	Z+, r20
 724:	31 50       	subi	r19, 0x01	; 1
 726:	33 23       	and	r19, r19
 728:	e1 f7       	brne	.-8      	; 0x722 <dtoa_prf+0x1be>
 72a:	c2 0e       	add	r12, r18
 72c:	d1 1c       	adc	r13, r1
 72e:	01 c0       	rjmp	.+2      	; 0x732 <dtoa_prf+0x1ce>
 730:	32 2f       	mov	r19, r18
 732:	aa 23       	and	r26, r26
 734:	19 f0       	breq	.+6      	; 0x73c <dtoa_prf+0x1d8>
 736:	f6 01       	movw	r30, r12
 738:	a1 93       	st	Z+, r26
 73a:	6f 01       	movw	r12, r30
 73c:	89 2b       	or	r24, r25
 73e:	11 f0       	breq	.+4      	; 0x744 <dtoa_prf+0x1e0>
 740:	13 2f       	mov	r17, r19
 742:	0a c0       	rjmp	.+20     	; 0x758 <dtoa_prf+0x1f4>
 744:	f6 01       	movw	r30, r12
 746:	13 2f       	mov	r17, r19
 748:	80 e3       	ldi	r24, 0x30	; 48
 74a:	02 c0       	rjmp	.+4      	; 0x750 <dtoa_prf+0x1ec>
 74c:	81 93       	st	Z+, r24
 74e:	11 50       	subi	r17, 0x01	; 1
 750:	11 23       	and	r17, r17
 752:	e1 f7       	brne	.-8      	; 0x74c <dtoa_prf+0x1e8>
 754:	c3 0e       	add	r12, r19
 756:	d1 1c       	adc	r13, r1
 758:	09 2d       	mov	r16, r9
 75a:	06 0f       	add	r16, r22
 75c:	ba 80       	ldd	r11, Y+2	; 0x02
 75e:	90 e1       	ldi	r25, 0x10	; 16
 760:	89 2e       	mov	r8, r25
 762:	91 2c       	mov	r9, r1
 764:	8e 20       	and	r8, r14
 766:	9f 20       	and	r9, r15
 768:	e4 fe       	sbrs	r14, 4
 76a:	04 c0       	rjmp	.+8      	; 0x774 <dtoa_prf+0x210>
 76c:	f1 e3       	ldi	r31, 0x31	; 49
 76e:	bf 16       	cp	r11, r31
 770:	09 f4       	brne	.+2      	; 0x774 <dtoa_prf+0x210>
 772:	01 50       	subi	r16, 0x01	; 1
 774:	10 16       	cp	r1, r16
 776:	14 f0       	brlt	.+4      	; 0x77c <dtoa_prf+0x218>
 778:	01 e0       	ldi	r16, 0x01	; 1
 77a:	03 c0       	rjmp	.+6      	; 0x782 <dtoa_prf+0x21e>
 77c:	09 30       	cpi	r16, 0x09	; 9
 77e:	08 f0       	brcs	.+2      	; 0x782 <dtoa_prf+0x21e>
 780:	08 e0       	ldi	r16, 0x08	; 8
 782:	9b 01       	movw	r18, r22
 784:	77 ff       	sbrs	r23, 7
 786:	02 c0       	rjmp	.+4      	; 0x78c <dtoa_prf+0x228>
 788:	20 e0       	ldi	r18, 0x00	; 0
 78a:	30 e0       	ldi	r19, 0x00	; 0
 78c:	cb 01       	movw	r24, r22
 78e:	01 96       	adiw	r24, 0x01	; 1
 790:	82 1b       	sub	r24, r18
 792:	93 0b       	sbc	r25, r19
 794:	fe 01       	movw	r30, r28
 796:	31 96       	adiw	r30, 0x01	; 1
 798:	e8 0f       	add	r30, r24
 79a:	f9 1f       	adc	r31, r25
 79c:	8e e2       	ldi	r24, 0x2E	; 46
 79e:	f8 2e       	mov	r15, r24
 7a0:	3b 01       	movw	r6, r22
 7a2:	60 1a       	sub	r6, r16
 7a4:	71 08       	sbc	r7, r1
 7a6:	8a 2d       	mov	r24, r10
 7a8:	90 e0       	ldi	r25, 0x00	; 0
 7aa:	44 27       	eor	r20, r20
 7ac:	55 27       	eor	r21, r21
 7ae:	48 1b       	sub	r20, r24
 7b0:	59 0b       	sbc	r21, r25
 7b2:	8f ef       	ldi	r24, 0xFF	; 255
 7b4:	2f 3f       	cpi	r18, 0xFF	; 255
 7b6:	38 07       	cpc	r19, r24
 7b8:	19 f4       	brne	.+6      	; 0x7c0 <dtoa_prf+0x25c>
 7ba:	d6 01       	movw	r26, r12
 7bc:	fd 92       	st	X+, r15
 7be:	6d 01       	movw	r12, r26
 7c0:	62 17       	cp	r22, r18
 7c2:	73 07       	cpc	r23, r19
 7c4:	2c f0       	brlt	.+10     	; 0x7d0 <dtoa_prf+0x26c>
 7c6:	62 16       	cp	r6, r18
 7c8:	73 06       	cpc	r7, r19
 7ca:	14 f4       	brge	.+4      	; 0x7d0 <dtoa_prf+0x26c>
 7cc:	80 81       	ld	r24, Z
 7ce:	01 c0       	rjmp	.+2      	; 0x7d2 <dtoa_prf+0x26e>
 7d0:	80 e3       	ldi	r24, 0x30	; 48
 7d2:	21 50       	subi	r18, 0x01	; 1
 7d4:	30 40       	sbci	r19, 0x00	; 0
 7d6:	31 96       	adiw	r30, 0x01	; 1
 7d8:	24 17       	cp	r18, r20
 7da:	35 07       	cpc	r19, r21
 7dc:	24 f0       	brlt	.+8      	; 0x7e6 <dtoa_prf+0x282>
 7de:	d6 01       	movw	r26, r12
 7e0:	8d 93       	st	X+, r24
 7e2:	6d 01       	movw	r12, r26
 7e4:	e6 cf       	rjmp	.-52     	; 0x7b2 <dtoa_prf+0x24e>
 7e6:	26 17       	cp	r18, r22
 7e8:	37 07       	cpc	r19, r23
 7ea:	49 f4       	brne	.+18     	; 0x7fe <dtoa_prf+0x29a>
 7ec:	b5 e3       	ldi	r27, 0x35	; 53
 7ee:	bb 15       	cp	r27, r11
 7f0:	28 f0       	brcs	.+10     	; 0x7fc <dtoa_prf+0x298>
 7f2:	bb 16       	cp	r11, r27
 7f4:	21 f4       	brne	.+8      	; 0x7fe <dtoa_prf+0x29a>
 7f6:	81 14       	cp	r8, r1
 7f8:	91 04       	cpc	r9, r1
 7fa:	09 f4       	brne	.+2      	; 0x7fe <dtoa_prf+0x29a>
 7fc:	81 e3       	ldi	r24, 0x31	; 49
 7fe:	f6 01       	movw	r30, r12
 800:	81 93       	st	Z+, r24
 802:	d6 01       	movw	r26, r12
 804:	81 2f       	mov	r24, r17
 806:	90 e2       	ldi	r25, 0x20	; 32
 808:	02 c0       	rjmp	.+4      	; 0x80e <dtoa_prf+0x2aa>
 80a:	9c 93       	st	X, r25
 80c:	81 50       	subi	r24, 0x01	; 1
 80e:	11 96       	adiw	r26, 0x01	; 1
 810:	88 23       	and	r24, r24
 812:	d9 f7       	brne	.-10     	; 0x80a <dtoa_prf+0x2a6>
 814:	e1 0f       	add	r30, r17
 816:	f1 1d       	adc	r31, r1
 818:	10 82       	st	Z, r1
 81a:	20 e0       	ldi	r18, 0x00	; 0
 81c:	30 e0       	ldi	r19, 0x00	; 0
 81e:	c9 01       	movw	r24, r18
 820:	29 96       	adiw	r28, 0x09	; 9
 822:	ee e0       	ldi	r30, 0x0E	; 14
 824:	0c 94 0c 05 	jmp	0xa18	; 0xa18 <__epilogue_restores__+0x8>

00000828 <__ftoa_engine>:
 828:	28 30       	cpi	r18, 0x08	; 8
 82a:	08 f0       	brcs	.+2      	; 0x82e <__ftoa_engine+0x6>
 82c:	27 e0       	ldi	r18, 0x07	; 7
 82e:	33 27       	eor	r19, r19
 830:	da 01       	movw	r26, r20
 832:	99 0f       	add	r25, r25
 834:	31 1d       	adc	r19, r1
 836:	87 fd       	sbrc	r24, 7
 838:	91 60       	ori	r25, 0x01	; 1
 83a:	00 96       	adiw	r24, 0x00	; 0
 83c:	61 05       	cpc	r22, r1
 83e:	71 05       	cpc	r23, r1
 840:	39 f4       	brne	.+14     	; 0x850 <__ftoa_engine+0x28>
 842:	32 60       	ori	r19, 0x02	; 2
 844:	2e 5f       	subi	r18, 0xFE	; 254
 846:	3d 93       	st	X+, r19
 848:	30 e3       	ldi	r19, 0x30	; 48
 84a:	2a 95       	dec	r18
 84c:	e1 f7       	brne	.-8      	; 0x846 <__ftoa_engine+0x1e>
 84e:	08 95       	ret
 850:	9f 3f       	cpi	r25, 0xFF	; 255
 852:	30 f0       	brcs	.+12     	; 0x860 <__stack+0x1>
 854:	80 38       	cpi	r24, 0x80	; 128
 856:	71 05       	cpc	r23, r1
 858:	61 05       	cpc	r22, r1
 85a:	09 f0       	breq	.+2      	; 0x85e <__ftoa_engine+0x36>
 85c:	3c 5f       	subi	r19, 0xFC	; 252
 85e:	3c 5f       	subi	r19, 0xFC	; 252
 860:	3d 93       	st	X+, r19
 862:	91 30       	cpi	r25, 0x01	; 1
 864:	08 f0       	brcs	.+2      	; 0x868 <__stack+0x9>
 866:	80 68       	ori	r24, 0x80	; 128
 868:	91 1d       	adc	r25, r1
 86a:	df 93       	push	r29
 86c:	cf 93       	push	r28
 86e:	1f 93       	push	r17
 870:	0f 93       	push	r16
 872:	ff 92       	push	r15
 874:	ef 92       	push	r14
 876:	19 2f       	mov	r17, r25
 878:	98 7f       	andi	r25, 0xF8	; 248
 87a:	96 95       	lsr	r25
 87c:	e9 2f       	mov	r30, r25
 87e:	96 95       	lsr	r25
 880:	96 95       	lsr	r25
 882:	e9 0f       	add	r30, r25
 884:	ff 27       	eor	r31, r31
 886:	e2 55       	subi	r30, 0x52	; 82
 888:	ff 4f       	sbci	r31, 0xFF	; 255
 88a:	99 27       	eor	r25, r25
 88c:	33 27       	eor	r19, r19
 88e:	ee 24       	eor	r14, r14
 890:	ff 24       	eor	r15, r15
 892:	a7 01       	movw	r20, r14
 894:	e7 01       	movw	r28, r14
 896:	05 90       	lpm	r0, Z+
 898:	08 94       	sec
 89a:	07 94       	ror	r0
 89c:	28 f4       	brcc	.+10     	; 0x8a8 <__stack+0x49>
 89e:	36 0f       	add	r19, r22
 8a0:	e7 1e       	adc	r14, r23
 8a2:	f8 1e       	adc	r15, r24
 8a4:	49 1f       	adc	r20, r25
 8a6:	51 1d       	adc	r21, r1
 8a8:	66 0f       	add	r22, r22
 8aa:	77 1f       	adc	r23, r23
 8ac:	88 1f       	adc	r24, r24
 8ae:	99 1f       	adc	r25, r25
 8b0:	06 94       	lsr	r0
 8b2:	a1 f7       	brne	.-24     	; 0x89c <__stack+0x3d>
 8b4:	05 90       	lpm	r0, Z+
 8b6:	07 94       	ror	r0
 8b8:	28 f4       	brcc	.+10     	; 0x8c4 <__stack+0x65>
 8ba:	e7 0e       	add	r14, r23
 8bc:	f8 1e       	adc	r15, r24
 8be:	49 1f       	adc	r20, r25
 8c0:	56 1f       	adc	r21, r22
 8c2:	c1 1d       	adc	r28, r1
 8c4:	77 0f       	add	r23, r23
 8c6:	88 1f       	adc	r24, r24
 8c8:	99 1f       	adc	r25, r25
 8ca:	66 1f       	adc	r22, r22
 8cc:	06 94       	lsr	r0
 8ce:	a1 f7       	brne	.-24     	; 0x8b8 <__stack+0x59>
 8d0:	05 90       	lpm	r0, Z+
 8d2:	07 94       	ror	r0
 8d4:	28 f4       	brcc	.+10     	; 0x8e0 <__stack+0x81>
 8d6:	f8 0e       	add	r15, r24
 8d8:	49 1f       	adc	r20, r25
 8da:	56 1f       	adc	r21, r22
 8dc:	c7 1f       	adc	r28, r23
 8de:	d1 1d       	adc	r29, r1
 8e0:	88 0f       	add	r24, r24
 8e2:	99 1f       	adc	r25, r25
 8e4:	66 1f       	adc	r22, r22
 8e6:	77 1f       	adc	r23, r23
 8e8:	06 94       	lsr	r0
 8ea:	a1 f7       	brne	.-24     	; 0x8d4 <__stack+0x75>
 8ec:	05 90       	lpm	r0, Z+
 8ee:	07 94       	ror	r0
 8f0:	20 f4       	brcc	.+8      	; 0x8fa <__stack+0x9b>
 8f2:	49 0f       	add	r20, r25
 8f4:	56 1f       	adc	r21, r22
 8f6:	c7 1f       	adc	r28, r23
 8f8:	d8 1f       	adc	r29, r24
 8fa:	99 0f       	add	r25, r25
 8fc:	66 1f       	adc	r22, r22
 8fe:	77 1f       	adc	r23, r23
 900:	88 1f       	adc	r24, r24
 902:	06 94       	lsr	r0
 904:	a9 f7       	brne	.-22     	; 0x8f0 <__stack+0x91>
 906:	84 91       	lpm	r24, Z+
 908:	10 95       	com	r17
 90a:	17 70       	andi	r17, 0x07	; 7
 90c:	41 f0       	breq	.+16     	; 0x91e <__stack+0xbf>
 90e:	d6 95       	lsr	r29
 910:	c7 95       	ror	r28
 912:	57 95       	ror	r21
 914:	47 95       	ror	r20
 916:	f7 94       	ror	r15
 918:	e7 94       	ror	r14
 91a:	1a 95       	dec	r17
 91c:	c1 f7       	brne	.-16     	; 0x90e <__stack+0xaf>
 91e:	e4 e5       	ldi	r30, 0x54	; 84
 920:	f0 e0       	ldi	r31, 0x00	; 0
 922:	68 94       	set
 924:	15 90       	lpm	r1, Z+
 926:	15 91       	lpm	r17, Z+
 928:	35 91       	lpm	r19, Z+
 92a:	65 91       	lpm	r22, Z+
 92c:	95 91       	lpm	r25, Z+
 92e:	05 90       	lpm	r0, Z+
 930:	7f e2       	ldi	r23, 0x2F	; 47
 932:	73 95       	inc	r23
 934:	e1 18       	sub	r14, r1
 936:	f1 0a       	sbc	r15, r17
 938:	43 0b       	sbc	r20, r19
 93a:	56 0b       	sbc	r21, r22
 93c:	c9 0b       	sbc	r28, r25
 93e:	d0 09       	sbc	r29, r0
 940:	c0 f7       	brcc	.-16     	; 0x932 <__stack+0xd3>
 942:	e1 0c       	add	r14, r1
 944:	f1 1e       	adc	r15, r17
 946:	43 1f       	adc	r20, r19
 948:	56 1f       	adc	r21, r22
 94a:	c9 1f       	adc	r28, r25
 94c:	d0 1d       	adc	r29, r0
 94e:	7e f4       	brtc	.+30     	; 0x96e <__stack+0x10f>
 950:	70 33       	cpi	r23, 0x30	; 48
 952:	11 f4       	brne	.+4      	; 0x958 <__stack+0xf9>
 954:	8a 95       	dec	r24
 956:	e6 cf       	rjmp	.-52     	; 0x924 <__stack+0xc5>
 958:	e8 94       	clt
 95a:	01 50       	subi	r16, 0x01	; 1
 95c:	30 f0       	brcs	.+12     	; 0x96a <__stack+0x10b>
 95e:	08 0f       	add	r16, r24
 960:	0a f4       	brpl	.+2      	; 0x964 <__stack+0x105>
 962:	00 27       	eor	r16, r16
 964:	02 17       	cp	r16, r18
 966:	08 f4       	brcc	.+2      	; 0x96a <__stack+0x10b>
 968:	20 2f       	mov	r18, r16
 96a:	23 95       	inc	r18
 96c:	02 2f       	mov	r16, r18
 96e:	7a 33       	cpi	r23, 0x3A	; 58
 970:	28 f0       	brcs	.+10     	; 0x97c <__stack+0x11d>
 972:	79 e3       	ldi	r23, 0x39	; 57
 974:	7d 93       	st	X+, r23
 976:	2a 95       	dec	r18
 978:	e9 f7       	brne	.-6      	; 0x974 <__stack+0x115>
 97a:	10 c0       	rjmp	.+32     	; 0x99c <__stack+0x13d>
 97c:	7d 93       	st	X+, r23
 97e:	2a 95       	dec	r18
 980:	89 f6       	brne	.-94     	; 0x924 <__stack+0xc5>
 982:	06 94       	lsr	r0
 984:	97 95       	ror	r25
 986:	67 95       	ror	r22
 988:	37 95       	ror	r19
 98a:	17 95       	ror	r17
 98c:	17 94       	ror	r1
 98e:	e1 18       	sub	r14, r1
 990:	f1 0a       	sbc	r15, r17
 992:	43 0b       	sbc	r20, r19
 994:	56 0b       	sbc	r21, r22
 996:	c9 0b       	sbc	r28, r25
 998:	d0 09       	sbc	r29, r0
 99a:	98 f0       	brcs	.+38     	; 0x9c2 <__stack+0x163>
 99c:	23 95       	inc	r18
 99e:	7e 91       	ld	r23, -X
 9a0:	73 95       	inc	r23
 9a2:	7a 33       	cpi	r23, 0x3A	; 58
 9a4:	08 f0       	brcs	.+2      	; 0x9a8 <__stack+0x149>
 9a6:	70 e3       	ldi	r23, 0x30	; 48
 9a8:	7c 93       	st	X, r23
 9aa:	20 13       	cpse	r18, r16
 9ac:	b8 f7       	brcc	.-18     	; 0x99c <__stack+0x13d>
 9ae:	7e 91       	ld	r23, -X
 9b0:	70 61       	ori	r23, 0x10	; 16
 9b2:	7d 93       	st	X+, r23
 9b4:	30 f0       	brcs	.+12     	; 0x9c2 <__stack+0x163>
 9b6:	83 95       	inc	r24
 9b8:	71 e3       	ldi	r23, 0x31	; 49
 9ba:	7d 93       	st	X+, r23
 9bc:	70 e3       	ldi	r23, 0x30	; 48
 9be:	2a 95       	dec	r18
 9c0:	e1 f7       	brne	.-8      	; 0x9ba <__stack+0x15b>
 9c2:	11 24       	eor	r1, r1
 9c4:	ef 90       	pop	r14
 9c6:	ff 90       	pop	r15
 9c8:	0f 91       	pop	r16
 9ca:	1f 91       	pop	r17
 9cc:	cf 91       	pop	r28
 9ce:	df 91       	pop	r29
 9d0:	99 27       	eor	r25, r25
 9d2:	87 fd       	sbrc	r24, 7
 9d4:	90 95       	com	r25
 9d6:	08 95       	ret

000009d8 <__prologue_saves__>:
 9d8:	2f 92       	push	r2
 9da:	3f 92       	push	r3
 9dc:	4f 92       	push	r4
 9de:	5f 92       	push	r5
 9e0:	6f 92       	push	r6
 9e2:	7f 92       	push	r7
 9e4:	8f 92       	push	r8
 9e6:	9f 92       	push	r9
 9e8:	af 92       	push	r10
 9ea:	bf 92       	push	r11
 9ec:	cf 92       	push	r12
 9ee:	df 92       	push	r13
 9f0:	ef 92       	push	r14
 9f2:	ff 92       	push	r15
 9f4:	0f 93       	push	r16
 9f6:	1f 93       	push	r17
 9f8:	cf 93       	push	r28
 9fa:	df 93       	push	r29
 9fc:	cd b7       	in	r28, 0x3d	; 61
 9fe:	de b7       	in	r29, 0x3e	; 62
 a00:	ca 1b       	sub	r28, r26
 a02:	db 0b       	sbc	r29, r27
 a04:	0f b6       	in	r0, 0x3f	; 63
 a06:	f8 94       	cli
 a08:	de bf       	out	0x3e, r29	; 62
 a0a:	0f be       	out	0x3f, r0	; 63
 a0c:	cd bf       	out	0x3d, r28	; 61
 a0e:	09 94       	ijmp

00000a10 <__epilogue_restores__>:
 a10:	2a 88       	ldd	r2, Y+18	; 0x12
 a12:	39 88       	ldd	r3, Y+17	; 0x11
 a14:	48 88       	ldd	r4, Y+16	; 0x10
 a16:	5f 84       	ldd	r5, Y+15	; 0x0f
 a18:	6e 84       	ldd	r6, Y+14	; 0x0e
 a1a:	7d 84       	ldd	r7, Y+13	; 0x0d
 a1c:	8c 84       	ldd	r8, Y+12	; 0x0c
 a1e:	9b 84       	ldd	r9, Y+11	; 0x0b
 a20:	aa 84       	ldd	r10, Y+10	; 0x0a
 a22:	b9 84       	ldd	r11, Y+9	; 0x09
 a24:	c8 84       	ldd	r12, Y+8	; 0x08
 a26:	df 80       	ldd	r13, Y+7	; 0x07
 a28:	ee 80       	ldd	r14, Y+6	; 0x06
 a2a:	fd 80       	ldd	r15, Y+5	; 0x05
 a2c:	0c 81       	ldd	r16, Y+4	; 0x04
 a2e:	1b 81       	ldd	r17, Y+3	; 0x03
 a30:	aa 81       	ldd	r26, Y+2	; 0x02
 a32:	b9 81       	ldd	r27, Y+1	; 0x01
 a34:	ce 0f       	add	r28, r30
 a36:	d1 1d       	adc	r29, r1
 a38:	0f b6       	in	r0, 0x3f	; 63
 a3a:	f8 94       	cli
 a3c:	de bf       	out	0x3e, r29	; 62
 a3e:	0f be       	out	0x3f, r0	; 63
 a40:	cd bf       	out	0x3d, r28	; 61
 a42:	ed 01       	movw	r28, r26
 a44:	08 95       	ret

00000a46 <_exit>:
 a46:	f8 94       	cli

00000a48 <__stop_program>:
 a48:	ff cf       	rjmp	.-2      	; 0xa48 <__stop_program>
