
distance.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000a72  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000016  00800060  00000a72  00000b06  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000002  00800076  00800076  00000b1c  2**0
                  ALLOC
  3 .debug_aranges 00000020  00000000  00000000  00000b1c  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 00000095  00000000  00000000  00000b3c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000003d6  00000000  00000000  00000bd1  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000184  00000000  00000000  00000fa7  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000386  00000000  00000000  0000112b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000090  00000000  00000000  000014b4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000014b  00000000  00000000  00001544  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000fe  00000000  00000000  0000168f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000048  00000000  00000000  0000178d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__ctors_end>
   4:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
   8:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
   c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  10:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  14:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  18:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  1c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  20:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  24:	0c 94 21 01 	jmp	0x242	; 0x242 <__vector_9>
  28:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  2c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  30:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  34:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  38:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  3c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  40:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  44:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  48:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  4c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  50:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  54:	00 40       	sbci	r16, 0x00	; 0
  56:	7a 10       	cpse	r7, r10
  58:	f3 5a       	subi	r31, 0xA3	; 163
  5a:	00 a0       	ldd	r0, Z+32	; 0x20
  5c:	72 4e       	sbci	r23, 0xE2	; 226
  5e:	18 09       	sbc	r17, r8
  60:	00 10       	cpse	r0, r0
  62:	a5 d4       	rcall	.+2378   	; 0x9ae <__stack+0x14f>
  64:	e8 00       	.word	0x00e8	; ????
  66:	00 e8       	ldi	r16, 0x80	; 128
  68:	76 48       	sbci	r23, 0x86	; 134
  6a:	17 00       	.word	0x0017	; ????
  6c:	00 e4       	ldi	r16, 0x40	; 64
  6e:	0b 54       	subi	r16, 0x4B	; 75
  70:	02 00       	.word	0x0002	; ????
  72:	00 ca       	rjmp	.-3072   	; 0xfffff474 <__eeprom_end+0xff7ef474>
  74:	9a 3b       	cpi	r25, 0xBA	; 186
  76:	00 00       	nop
  78:	00 e1       	ldi	r16, 0x10	; 16
  7a:	f5 05       	cpc	r31, r5
  7c:	00 00       	nop
  7e:	80 96       	adiw	r24, 0x20	; 32
  80:	98 00       	.word	0x0098	; ????
  82:	00 00       	nop
  84:	40 42       	sbci	r20, 0x20	; 32
  86:	0f 00       	.word	0x000f	; ????
  88:	00 00       	nop
  8a:	a0 86       	std	Z+8, r10	; 0x08
  8c:	01 00       	.word	0x0001	; ????
  8e:	00 00       	nop
  90:	10 27       	eor	r17, r16
  92:	00 00       	nop
  94:	00 00       	nop
  96:	e8 03       	fmulsu	r22, r16
  98:	00 00       	nop
  9a:	00 00       	nop
  9c:	64 00       	.word	0x0064	; ????
  9e:	00 00       	nop
  a0:	00 00       	nop
  a2:	0a 00       	.word	0x000a	; ????
  a4:	00 00       	nop
  a6:	00 00       	nop
  a8:	01 00       	.word	0x0001	; ????
  aa:	00 00       	nop
  ac:	00 00       	nop
  ae:	2c 76       	andi	r18, 0x6C	; 108
  b0:	d8 88       	ldd	r13, Y+16	; 0x10
  b2:	dc 67       	ori	r29, 0x7C	; 124
  b4:	4f 08       	sbc	r4, r15
  b6:	23 df       	rcall	.-442    	; 0xfffffefe <__eeprom_end+0xff7efefe>
  b8:	c1 df       	rcall	.-126    	; 0x3c <__CCP__+0x8>
  ba:	ae 59       	subi	r26, 0x9E	; 158
  bc:	e1 b1       	in	r30, 0x01	; 1
  be:	b7 96       	adiw	r30, 0x27	; 39
  c0:	e5 e3       	ldi	r30, 0x35	; 53
  c2:	e4 53       	subi	r30, 0x34	; 52
  c4:	c6 3a       	cpi	r28, 0xA6	; 166
  c6:	e6 51       	subi	r30, 0x16	; 22
  c8:	99 76       	andi	r25, 0x69	; 105
  ca:	96 e8       	ldi	r25, 0x86	; 134
  cc:	e6 c2       	rjmp	.+1484   	; 0x69a <dtoa_prf+0x10e>
  ce:	84 26       	eor	r8, r20
  d0:	eb 89       	ldd	r30, Y+19	; 0x13
  d2:	8c 9b       	sbis	0x11, 4	; 17
  d4:	62 ed       	ldi	r22, 0xD2	; 210
  d6:	40 7c       	andi	r20, 0xC0	; 192
  d8:	6f fc       	.word	0xfc6f	; ????
  da:	ef bc       	out	0x2f, r14	; 47
  dc:	9c 9f       	mul	r25, r28
  de:	40 f2       	brcs	.-112    	; 0x70 <__SREG__+0x31>
  e0:	ba a5       	ldd	r27, Y+42	; 0x2a
  e2:	6f a5       	ldd	r22, Y+47	; 0x2f
  e4:	f4 90       	lpm	r15, Z+
  e6:	05 5a       	subi	r16, 0xA5	; 165
  e8:	2a f7       	brpl	.-54     	; 0xb4 <__SREG__+0x75>
  ea:	5c 93       	st	X, r21
  ec:	6b 6c       	ori	r22, 0xCB	; 203
  ee:	f9 67       	ori	r31, 0x79	; 121
  f0:	6d c1       	rjmp	.+730    	; 0x3cc <__divsf3_pse+0x66>
  f2:	1b fc       	.word	0xfc1b	; ????
  f4:	e0 e4       	ldi	r30, 0x40	; 64
  f6:	0d 47       	sbci	r16, 0x7D	; 125
  f8:	fe f5       	brtc	.+126    	; 0x178 <.do_clear_bss_loop>
  fa:	20 e6       	ldi	r18, 0x60	; 96
  fc:	b5 00       	.word	0x00b5	; ????
  fe:	d0 ed       	ldi	r29, 0xD0	; 208
 100:	90 2e       	mov	r9, r16
 102:	03 00       	.word	0x0003	; ????
 104:	94 35       	cpi	r25, 0x54	; 84
 106:	77 05       	cpc	r23, r7
 108:	00 80       	ld	r0, Z
 10a:	84 1e       	adc	r8, r20
 10c:	08 00       	.word	0x0008	; ????
 10e:	00 20       	and	r0, r0
 110:	4e 0a       	sbc	r4, r30
 112:	00 00       	nop
 114:	00 c8       	rjmp	.-4096   	; 0xfffff116 <__eeprom_end+0xff7ef116>
 116:	0c 33       	cpi	r16, 0x3C	; 60
 118:	33 33       	cpi	r19, 0x33	; 51
 11a:	33 0f       	add	r19, r19
 11c:	98 6e       	ori	r25, 0xE8	; 232
 11e:	12 83       	std	Z+2, r17	; 0x02
 120:	11 41       	sbci	r17, 0x11	; 17
 122:	ef 8d       	ldd	r30, Y+31	; 0x1f
 124:	21 14       	cp	r2, r1
 126:	89 3b       	cpi	r24, 0xB9	; 185
 128:	e6 55       	subi	r30, 0x56	; 86
 12a:	16 cf       	rjmp	.-468    	; 0xffffff58 <__eeprom_end+0xff7eff58>
 12c:	fe e6       	ldi	r31, 0x6E	; 110
 12e:	db 18       	sub	r13, r11
 130:	d1 84       	ldd	r13, Z+9	; 0x09
 132:	4b 38       	cpi	r20, 0x8B	; 139
 134:	1b f7       	brvc	.-58     	; 0xfc <__SREG__+0xbd>
 136:	7c 1d       	adc	r23, r12
 138:	90 1d       	adc	r25, r0
 13a:	a4 bb       	out	0x14, r26	; 20
 13c:	e4 24       	eor	r14, r4
 13e:	20 32       	cpi	r18, 0x20	; 32
 140:	84 72       	andi	r24, 0x24	; 36
 142:	5e 22       	and	r5, r30
 144:	81 00       	.word	0x0081	; ????
 146:	c9 f1       	breq	.+114    	; 0x1ba <LCD_Char+0x12>
 148:	24 ec       	ldi	r18, 0xC4	; 196
 14a:	a1 e5       	ldi	r26, 0x51	; 81
 14c:	3d 27       	eor	r19, r29

0000014e <__ctors_end>:
 14e:	11 24       	eor	r1, r1
 150:	1f be       	out	0x3f, r1	; 63
 152:	cf e5       	ldi	r28, 0x5F	; 95
 154:	d8 e0       	ldi	r29, 0x08	; 8
 156:	de bf       	out	0x3e, r29	; 62
 158:	cd bf       	out	0x3d, r28	; 61

0000015a <__do_copy_data>:
 15a:	10 e0       	ldi	r17, 0x00	; 0
 15c:	a0 e6       	ldi	r26, 0x60	; 96
 15e:	b0 e0       	ldi	r27, 0x00	; 0
 160:	e2 e7       	ldi	r30, 0x72	; 114
 162:	fa e0       	ldi	r31, 0x0A	; 10
 164:	02 c0       	rjmp	.+4      	; 0x16a <.do_copy_data_start>

00000166 <.do_copy_data_loop>:
 166:	05 90       	lpm	r0, Z+
 168:	0d 92       	st	X+, r0

0000016a <.do_copy_data_start>:
 16a:	a6 37       	cpi	r26, 0x76	; 118
 16c:	b1 07       	cpc	r27, r17
 16e:	d9 f7       	brne	.-10     	; 0x166 <.do_copy_data_loop>

00000170 <__do_clear_bss>:
 170:	10 e0       	ldi	r17, 0x00	; 0
 172:	a6 e7       	ldi	r26, 0x76	; 118
 174:	b0 e0       	ldi	r27, 0x00	; 0
 176:	01 c0       	rjmp	.+2      	; 0x17a <.do_clear_bss_start>

00000178 <.do_clear_bss_loop>:
 178:	1d 92       	st	X+, r1

0000017a <.do_clear_bss_start>:
 17a:	a8 37       	cpi	r26, 0x78	; 120
 17c:	b1 07       	cpc	r27, r17
 17e:	e1 f7       	brne	.-8      	; 0x178 <.do_clear_bss_loop>
 180:	0e 94 38 01 	call	0x270	; 0x270 <main>
 184:	0c 94 37 05 	jmp	0xa6e	; 0xa6e <_exit>

00000188 <__bad_interrupt>:
 188:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000018c <LCD_Command>:
#include "inc\lcd.h"						/* Include LCD header file */


void LCD_Command (char cmd)							/* LCD command write function */
{
	LCD_Data_Port = cmd;							/* Write command data to LCD data port */
 18c:	8b bb       	out	0x1b, r24	; 27
	LCD_Command_Port &= ~((1<<RS)|(1<<RW));			/* Make RS LOW (command reg.), RW LOW (Write) */
 18e:	82 b3       	in	r24, 0x12	; 18
 190:	87 7e       	andi	r24, 0xE7	; 231
 192:	82 bb       	out	0x12, r24	; 18
	LCD_Command_Port |= (1<<EN);					/* High to Low transition on EN (Enable) */
 194:	95 9a       	sbi	0x12, 5	; 18
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
 196:	82 e0       	ldi	r24, 0x02	; 2
 198:	8a 95       	dec	r24
 19a:	f1 f7       	brne	.-4      	; 0x198 <LCD_Command+0xc>
	_delay_us(1);
	LCD_Command_Port &= ~(1<<EN);
 19c:	95 98       	cbi	0x12, 5	; 18
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
 19e:	80 e7       	ldi	r24, 0x70	; 112
 1a0:	97 e1       	ldi	r25, 0x17	; 23
 1a2:	01 97       	sbiw	r24, 0x01	; 1
 1a4:	f1 f7       	brne	.-4      	; 0x1a2 <LCD_Command+0x16>
	_delay_ms(3);									/* Wait little bit */
}
 1a6:	08 95       	ret

000001a8 <LCD_Char>:

void LCD_Char (char char_data)						/* LCD data write function */
{
	LCD_Data_Port = char_data;						/* Write data to LCD data port */
 1a8:	8b bb       	out	0x1b, r24	; 27
	LCD_Command_Port &= ~(1<<RW);					/* Make RW LOW (Write) */
 1aa:	94 98       	cbi	0x12, 4	; 18
	LCD_Command_Port |= (1<<EN)|(1<<RS);			/* Make RS HIGH (data reg.) and High to Low transition on EN (Enable) */
 1ac:	82 b3       	in	r24, 0x12	; 18
 1ae:	88 62       	ori	r24, 0x28	; 40
 1b0:	82 bb       	out	0x12, r24	; 18
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
 1b2:	82 e0       	ldi	r24, 0x02	; 2
 1b4:	8a 95       	dec	r24
 1b6:	f1 f7       	brne	.-4      	; 0x1b4 <LCD_Char+0xc>
	_delay_us(1);
	LCD_Command_Port &= ~(1<<EN);
 1b8:	95 98       	cbi	0x12, 5	; 18
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
 1ba:	80 ed       	ldi	r24, 0xD0	; 208
 1bc:	97 e0       	ldi	r25, 0x07	; 7
 1be:	01 97       	sbiw	r24, 0x01	; 1
 1c0:	f1 f7       	brne	.-4      	; 0x1be <LCD_Char+0x16>
	_delay_ms(1);									/* Wait little bit */
}
 1c2:	08 95       	ret

000001c4 <LCD_Init>:

void LCD_Init (void)								/* LCD Initialize function */
{
	LCD_Command_Dir |= (1<<RS)|(1<<RW)|(1<<EN);		/* Make LCD command port direction as o/p */
 1c4:	81 b3       	in	r24, 0x11	; 17
 1c6:	88 63       	ori	r24, 0x38	; 56
 1c8:	81 bb       	out	0x11, r24	; 17
	LCD_Data_Dir = 0xFF;							/* Make LCD data port direction as o/p */
 1ca:	8f ef       	ldi	r24, 0xFF	; 255
 1cc:	8a bb       	out	0x1a, r24	; 26
 1ce:	80 e4       	ldi	r24, 0x40	; 64
 1d0:	9c e9       	ldi	r25, 0x9C	; 156
 1d2:	01 97       	sbiw	r24, 0x01	; 1
 1d4:	f1 f7       	brne	.-4      	; 0x1d2 <LCD_Init+0xe>
	
	_delay_ms(20);									/* LCD power up time to get things ready, it should always >15ms */
	LCD_Command (0x38);								/* Initialize 16X2 LCD in 8bit mode */
 1d6:	88 e3       	ldi	r24, 0x38	; 56
 1d8:	0e 94 c6 00 	call	0x18c	; 0x18c <LCD_Command>
	LCD_Command (0x0C);								/* Display ON, Cursor OFF command */
 1dc:	8c e0       	ldi	r24, 0x0C	; 12
 1de:	0e 94 c6 00 	call	0x18c	; 0x18c <LCD_Command>
	LCD_Command (0x06);								/* Auto Increment cursor */
 1e2:	86 e0       	ldi	r24, 0x06	; 6
 1e4:	0e 94 c6 00 	call	0x18c	; 0x18c <LCD_Command>
	LCD_Command (0x01);								/* Clear LCD command */
 1e8:	81 e0       	ldi	r24, 0x01	; 1
 1ea:	0e 94 c6 00 	call	0x18c	; 0x18c <LCD_Command>
	LCD_Command (0x80);								/* 8 is for first line and 0 is for 0th position */
 1ee:	80 e8       	ldi	r24, 0x80	; 128
 1f0:	0e 94 c6 00 	call	0x18c	; 0x18c <LCD_Command>
}
 1f4:	08 95       	ret

000001f6 <LCD_String>:

void LCD_String (char *str)							/* Send string to LCD function */
{
 1f6:	cf 93       	push	r28
 1f8:	df 93       	push	r29
 1fa:	ec 01       	movw	r28, r24
 1fc:	02 c0       	rjmp	.+4      	; 0x202 <LCD_String+0xc>
	int i;
	for(i=0;str[i]!=0;i++)							/* Send each char of string till the NULL */
	{
		LCD_Char (str[i]);							/* Call LCD data write */
 1fe:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <LCD_Char>
}

void LCD_String (char *str)							/* Send string to LCD function */
{
	int i;
	for(i=0;str[i]!=0;i++)							/* Send each char of string till the NULL */
 202:	89 91       	ld	r24, Y+
 204:	88 23       	and	r24, r24
 206:	d9 f7       	brne	.-10     	; 0x1fe <LCD_String+0x8>
	{
		LCD_Char (str[i]);							/* Call LCD data write */
	}
}
 208:	df 91       	pop	r29
 20a:	cf 91       	pop	r28
 20c:	08 95       	ret

0000020e <LCD_String_xy>:

void LCD_String_xy (char row, char pos, char *str)	/* Send string to LCD function */
{
 20e:	cf 93       	push	r28
 210:	df 93       	push	r29
 212:	ea 01       	movw	r28, r20
	if (row == 1)
 214:	81 30       	cpi	r24, 0x01	; 1
 216:	21 f4       	brne	.+8      	; 0x220 <LCD_String_xy+0x12>
		LCD_Command((pos & 0x0F)|0x80);				/* Command of first row and required position<16 */
 218:	6f 70       	andi	r22, 0x0F	; 15
 21a:	86 2f       	mov	r24, r22
 21c:	80 68       	ori	r24, 0x80	; 128
 21e:	05 c0       	rjmp	.+10     	; 0x22a <LCD_String_xy+0x1c>
	else if (row == 2)
 220:	82 30       	cpi	r24, 0x02	; 2
 222:	29 f4       	brne	.+10     	; 0x22e <LCD_String_xy+0x20>
		LCD_Command((pos & 0x0F)|0xC0);				/* Command of Second row and required position<16 */
 224:	6f 70       	andi	r22, 0x0F	; 15
 226:	86 2f       	mov	r24, r22
 228:	80 6c       	ori	r24, 0xC0	; 192
 22a:	0e 94 c6 00 	call	0x18c	; 0x18c <LCD_Command>
	LCD_String(str);								/* Call LCD string function */
 22e:	ce 01       	movw	r24, r28
 230:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <LCD_String>
}
 234:	df 91       	pop	r29
 236:	cf 91       	pop	r28
 238:	08 95       	ret

0000023a <LCD_Clear>:

void LCD_Clear()
{
	LCD_Command(0x01);								/* clear display */
 23a:	81 e0       	ldi	r24, 0x01	; 1
 23c:	0e 94 c6 00 	call	0x18c	; 0x18c <LCD_Command>
}
 240:	08 95       	ret

00000242 <__vector_9>:

int TimerOverflow = 0;


ISR(TIMER1_OVF_vect)
{
 242:	1f 92       	push	r1
 244:	0f 92       	push	r0
 246:	0f b6       	in	r0, 0x3f	; 63
 248:	0f 92       	push	r0
 24a:	11 24       	eor	r1, r1
 24c:	8f 93       	push	r24
 24e:	9f 93       	push	r25
	TimerOverflow++;	/* Increment Timer Overflow count */
 250:	80 91 76 00 	lds	r24, 0x0076
 254:	90 91 77 00 	lds	r25, 0x0077
 258:	01 96       	adiw	r24, 0x01	; 1
 25a:	90 93 77 00 	sts	0x0077, r25
 25e:	80 93 76 00 	sts	0x0076, r24
}
 262:	9f 91       	pop	r25
 264:	8f 91       	pop	r24
 266:	0f 90       	pop	r0
 268:	0f be       	out	0x3f, r0	; 63
 26a:	0f 90       	pop	r0
 26c:	1f 90       	pop	r1
 26e:	18 95       	reti

00000270 <main>:

int main(void)
{
 270:	9f 92       	push	r9
 272:	af 92       	push	r10
 274:	bf 92       	push	r11
 276:	cf 92       	push	r12
 278:	df 92       	push	r13
 27a:	ef 92       	push	r14
 27c:	ff 92       	push	r15
 27e:	0f 93       	push	r16
 280:	1f 93       	push	r17
 282:	df 93       	push	r29
 284:	cf 93       	push	r28
 286:	cd b7       	in	r28, 0x3d	; 61
 288:	de b7       	in	r29, 0x3e	; 62
 28a:	2a 97       	sbiw	r28, 0x0a	; 10
 28c:	0f b6       	in	r0, 0x3f	; 63
 28e:	f8 94       	cli
 290:	de bf       	out	0x3e, r29	; 62
 292:	0f be       	out	0x3f, r0	; 63
 294:	cd bf       	out	0x3d, r28	; 61
	char string[10];
	long count;
	double distance;
	
	DDRD = 0x01;		/* Make trigger pin as output */
 296:	81 e0       	ldi	r24, 0x01	; 1
 298:	81 bb       	out	0x11, r24	; 17
	PORTD = 0xFF;		/* Turn on Pull-up */
 29a:	8f ef       	ldi	r24, 0xFF	; 255
 29c:	82 bb       	out	0x12, r24	; 18
	
	LCD_Init();
 29e:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <LCD_Init>
	LCD_String_xy(1, 0, "Object");
 2a2:	81 e0       	ldi	r24, 0x01	; 1
 2a4:	60 e0       	ldi	r22, 0x00	; 0
 2a6:	40 e6       	ldi	r20, 0x60	; 96
 2a8:	50 e0       	ldi	r21, 0x00	; 0
 2aa:	0e 94 07 01 	call	0x20e	; 0x20e <LCD_String_xy>
	
	sei();			/* Enable global interrupt */
 2ae:	78 94       	sei
	TIMSK = (1 << TOIE1);	/* Enable Timer1 overflow interrupts */
 2b0:	84 e0       	ldi	r24, 0x04	; 4
 2b2:	89 bf       	out	0x39, r24	; 57
	TCCR1A = 0;		/* Set all bit to zero Normal operation */
 2b4:	1f bc       	out	0x2f, r1	; 47
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
 2b6:	3a e1       	ldi	r19, 0x1A	; 26
 2b8:	93 2e       	mov	r9, r19
		PORTD |= (1 << Trigger_pin);
		_delay_us(10);
		PORTD &= (~(1 << Trigger_pin));
		
		TCNT1 = 0;	/* Clear Timer counter */
		TCCR1B = 0x41;	/* Capture on rising edge, No prescaler*/
 2ba:	21 e4       	ldi	r18, 0x41	; 65
 2bc:	a2 2e       	mov	r10, r18
		TIFR = 1<<ICF1;	/* Clear ICP flag (Input Capture flag) */
 2be:	90 e2       	ldi	r25, 0x20	; 32
 2c0:	c9 2e       	mov	r12, r25
		TIFR = 1<<TOV1;	/* Clear Timer Overflow flag */
 2c2:	84 e0       	ldi	r24, 0x04	; 4
 2c4:	d8 2e       	mov	r13, r24
        
		/*Calculate width of Echo by Input Capture (ICP) */
		
		while ((TIFR & (1 << ICF1)) == 0);/* Wait for rising edge */
		TCNT1 = 0;	/* Clear Timer counter */
		TCCR1B = 0x01;	/* Capture on falling edge, No prescaler */
 2c6:	bb 24       	eor	r11, r11
 2c8:	b3 94       	inc	r11
		while ((TIFR & (1 << ICF1)) == 0);/* Wait for falling edge */
		count = ICR1 + (65535 * TimerOverflow);	/* Take count */
		/* 8MHz Timer freq, sound speed =343 m/s */
		distance = (double)count / 466.47;

		dtostrf(distance, 2, 2, string);/* distance to string */
 2ca:	7e 01       	movw	r14, r28
 2cc:	08 94       	sec
 2ce:	e1 1c       	adc	r14, r1
 2d0:	f1 1c       	adc	r15, r1
	TCCR1A = 0;		/* Set all bit to zero Normal operation */

	while(1)
	{   
		/* Give 10us trigger pulse on trig. pin to HC-SR04 */
		PORTD |= (1 << Trigger_pin);
 2d2:	90 9a       	sbi	0x12, 0	; 18
 2d4:	89 2d       	mov	r24, r9
 2d6:	8a 95       	dec	r24
 2d8:	f1 f7       	brne	.-4      	; 0x2d6 <main+0x66>
		_delay_us(10);
		PORTD &= (~(1 << Trigger_pin));
 2da:	90 98       	cbi	0x12, 0	; 18
		
		TCNT1 = 0;	/* Clear Timer counter */
 2dc:	1d bc       	out	0x2d, r1	; 45
 2de:	1c bc       	out	0x2c, r1	; 44
		TCCR1B = 0x41;	/* Capture on rising edge, No prescaler*/
 2e0:	ae bc       	out	0x2e, r10	; 46
		TIFR = 1<<ICF1;	/* Clear ICP flag (Input Capture flag) */
 2e2:	c8 be       	out	0x38, r12	; 56
		TIFR = 1<<TOV1;	/* Clear Timer Overflow flag */
 2e4:	d8 be       	out	0x38, r13	; 56
        
		/*Calculate width of Echo by Input Capture (ICP) */
		
		while ((TIFR & (1 << ICF1)) == 0);/* Wait for rising edge */
 2e6:	08 b6       	in	r0, 0x38	; 56
 2e8:	05 fe       	sbrs	r0, 5
 2ea:	fd cf       	rjmp	.-6      	; 0x2e6 <main+0x76>
		TCNT1 = 0;	/* Clear Timer counter */
 2ec:	1d bc       	out	0x2d, r1	; 45
 2ee:	1c bc       	out	0x2c, r1	; 44
		TCCR1B = 0x01;	/* Capture on falling edge, No prescaler */
 2f0:	be bc       	out	0x2e, r11	; 46
		TIFR = 1<<ICF1;	/* Clear ICP flag (Input Capture flag) */
 2f2:	c8 be       	out	0x38, r12	; 56
		TIFR = 1<<TOV1;	/* Clear Timer Overflow flag */
 2f4:	d8 be       	out	0x38, r13	; 56
		TimerOverflow = 0;/* Clear Timer overflow count */
 2f6:	10 92 77 00 	sts	0x0077, r1
 2fa:	10 92 76 00 	sts	0x0076, r1
        
		while ((TIFR & (1 << ICF1)) == 0);/* Wait for falling edge */
 2fe:	08 b6       	in	r0, 0x38	; 56
 300:	05 fe       	sbrs	r0, 5
 302:	fd cf       	rjmp	.-6      	; 0x2fe <main+0x8e>
		count = ICR1 + (65535 * TimerOverflow);	/* Take count */
 304:	66 b5       	in	r22, 0x26	; 38
 306:	77 b5       	in	r23, 0x27	; 39
		/* 8MHz Timer freq, sound speed =343 m/s */
		distance = (double)count / 466.47;

		dtostrf(distance, 2, 2, string);/* distance to string */
 308:	80 e0       	ldi	r24, 0x00	; 0
 30a:	90 e0       	ldi	r25, 0x00	; 0
 30c:	0e 94 0e 02 	call	0x41c	; 0x41c <__floatsisf>
 310:	29 e2       	ldi	r18, 0x29	; 41
 312:	3c e3       	ldi	r19, 0x3C	; 60
 314:	49 ee       	ldi	r20, 0xE9	; 233
 316:	53 e4       	ldi	r21, 0x43	; 67
 318:	0e 94 a4 01 	call	0x348	; 0x348 <__divsf3>
 31c:	42 e0       	ldi	r20, 0x02	; 2
 31e:	22 e0       	ldi	r18, 0x02	; 2
 320:	87 01       	movw	r16, r14
 322:	0e 94 9a 02 	call	0x534	; 0x534 <dtostrf>
		strcat(string, " cm   ");	/* Concat unit i.e.cm */
 326:	c7 01       	movw	r24, r14
 328:	67 e6       	ldi	r22, 0x67	; 103
 32a:	70 e0       	ldi	r23, 0x00	; 0
 32c:	0e 94 bb 02 	call	0x576	; 0x576 <strcat>
		LCD_String_xy(2, 0, "Dist = ");
 330:	82 e0       	ldi	r24, 0x02	; 2
 332:	60 e0       	ldi	r22, 0x00	; 0
 334:	4e e6       	ldi	r20, 0x6E	; 110
 336:	50 e0       	ldi	r21, 0x00	; 0
 338:	0e 94 07 01 	call	0x20e	; 0x20e <LCD_String_xy>
		LCD_String_xy(2, 7, string);	/* Print distance */
 33c:	82 e0       	ldi	r24, 0x02	; 2
 33e:	67 e0       	ldi	r22, 0x07	; 7
 340:	a7 01       	movw	r20, r14
 342:	0e 94 07 01 	call	0x20e	; 0x20e <LCD_String_xy>
 346:	c5 cf       	rjmp	.-118    	; 0x2d2 <main+0x62>

00000348 <__divsf3>:
 348:	0c d0       	rcall	.+24     	; 0x362 <__divsf3x>
 34a:	ba c0       	rjmp	.+372    	; 0x4c0 <__fp_round>
 34c:	b2 d0       	rcall	.+356    	; 0x4b2 <__fp_pscB>
 34e:	40 f0       	brcs	.+16     	; 0x360 <__divsf3+0x18>
 350:	a9 d0       	rcall	.+338    	; 0x4a4 <__fp_pscA>
 352:	30 f0       	brcs	.+12     	; 0x360 <__divsf3+0x18>
 354:	21 f4       	brne	.+8      	; 0x35e <__divsf3+0x16>
 356:	5f 3f       	cpi	r21, 0xFF	; 255
 358:	19 f0       	breq	.+6      	; 0x360 <__divsf3+0x18>
 35a:	9b c0       	rjmp	.+310    	; 0x492 <__fp_inf>
 35c:	51 11       	cpse	r21, r1
 35e:	e4 c0       	rjmp	.+456    	; 0x528 <__fp_szero>
 360:	9e c0       	rjmp	.+316    	; 0x49e <__fp_nan>

00000362 <__divsf3x>:
 362:	bf d0       	rcall	.+382    	; 0x4e2 <__fp_split3>
 364:	98 f3       	brcs	.-26     	; 0x34c <__divsf3+0x4>

00000366 <__divsf3_pse>:
 366:	99 23       	and	r25, r25
 368:	c9 f3       	breq	.-14     	; 0x35c <__divsf3+0x14>
 36a:	55 23       	and	r21, r21
 36c:	b1 f3       	breq	.-20     	; 0x35a <__divsf3+0x12>
 36e:	95 1b       	sub	r25, r21
 370:	55 0b       	sbc	r21, r21
 372:	bb 27       	eor	r27, r27
 374:	aa 27       	eor	r26, r26
 376:	62 17       	cp	r22, r18
 378:	73 07       	cpc	r23, r19
 37a:	84 07       	cpc	r24, r20
 37c:	38 f0       	brcs	.+14     	; 0x38c <__divsf3_pse+0x26>
 37e:	9f 5f       	subi	r25, 0xFF	; 255
 380:	5f 4f       	sbci	r21, 0xFF	; 255
 382:	22 0f       	add	r18, r18
 384:	33 1f       	adc	r19, r19
 386:	44 1f       	adc	r20, r20
 388:	aa 1f       	adc	r26, r26
 38a:	a9 f3       	breq	.-22     	; 0x376 <__divsf3_pse+0x10>
 38c:	33 d0       	rcall	.+102    	; 0x3f4 <__divsf3_pse+0x8e>
 38e:	0e 2e       	mov	r0, r30
 390:	3a f0       	brmi	.+14     	; 0x3a0 <__divsf3_pse+0x3a>
 392:	e0 e8       	ldi	r30, 0x80	; 128
 394:	30 d0       	rcall	.+96     	; 0x3f6 <__divsf3_pse+0x90>
 396:	91 50       	subi	r25, 0x01	; 1
 398:	50 40       	sbci	r21, 0x00	; 0
 39a:	e6 95       	lsr	r30
 39c:	00 1c       	adc	r0, r0
 39e:	ca f7       	brpl	.-14     	; 0x392 <__divsf3_pse+0x2c>
 3a0:	29 d0       	rcall	.+82     	; 0x3f4 <__divsf3_pse+0x8e>
 3a2:	fe 2f       	mov	r31, r30
 3a4:	27 d0       	rcall	.+78     	; 0x3f4 <__divsf3_pse+0x8e>
 3a6:	66 0f       	add	r22, r22
 3a8:	77 1f       	adc	r23, r23
 3aa:	88 1f       	adc	r24, r24
 3ac:	bb 1f       	adc	r27, r27
 3ae:	26 17       	cp	r18, r22
 3b0:	37 07       	cpc	r19, r23
 3b2:	48 07       	cpc	r20, r24
 3b4:	ab 07       	cpc	r26, r27
 3b6:	b0 e8       	ldi	r27, 0x80	; 128
 3b8:	09 f0       	breq	.+2      	; 0x3bc <__divsf3_pse+0x56>
 3ba:	bb 0b       	sbc	r27, r27
 3bc:	80 2d       	mov	r24, r0
 3be:	bf 01       	movw	r22, r30
 3c0:	ff 27       	eor	r31, r31
 3c2:	93 58       	subi	r25, 0x83	; 131
 3c4:	5f 4f       	sbci	r21, 0xFF	; 255
 3c6:	2a f0       	brmi	.+10     	; 0x3d2 <__divsf3_pse+0x6c>
 3c8:	9e 3f       	cpi	r25, 0xFE	; 254
 3ca:	51 05       	cpc	r21, r1
 3cc:	68 f0       	brcs	.+26     	; 0x3e8 <__divsf3_pse+0x82>
 3ce:	61 c0       	rjmp	.+194    	; 0x492 <__fp_inf>
 3d0:	ab c0       	rjmp	.+342    	; 0x528 <__fp_szero>
 3d2:	5f 3f       	cpi	r21, 0xFF	; 255
 3d4:	ec f3       	brlt	.-6      	; 0x3d0 <__divsf3_pse+0x6a>
 3d6:	98 3e       	cpi	r25, 0xE8	; 232
 3d8:	dc f3       	brlt	.-10     	; 0x3d0 <__divsf3_pse+0x6a>
 3da:	86 95       	lsr	r24
 3dc:	77 95       	ror	r23
 3de:	67 95       	ror	r22
 3e0:	b7 95       	ror	r27
 3e2:	f7 95       	ror	r31
 3e4:	9f 5f       	subi	r25, 0xFF	; 255
 3e6:	c9 f7       	brne	.-14     	; 0x3da <__divsf3_pse+0x74>
 3e8:	88 0f       	add	r24, r24
 3ea:	91 1d       	adc	r25, r1
 3ec:	96 95       	lsr	r25
 3ee:	87 95       	ror	r24
 3f0:	97 f9       	bld	r25, 7
 3f2:	08 95       	ret
 3f4:	e1 e0       	ldi	r30, 0x01	; 1
 3f6:	66 0f       	add	r22, r22
 3f8:	77 1f       	adc	r23, r23
 3fa:	88 1f       	adc	r24, r24
 3fc:	bb 1f       	adc	r27, r27
 3fe:	62 17       	cp	r22, r18
 400:	73 07       	cpc	r23, r19
 402:	84 07       	cpc	r24, r20
 404:	ba 07       	cpc	r27, r26
 406:	20 f0       	brcs	.+8      	; 0x410 <__divsf3_pse+0xaa>
 408:	62 1b       	sub	r22, r18
 40a:	73 0b       	sbc	r23, r19
 40c:	84 0b       	sbc	r24, r20
 40e:	ba 0b       	sbc	r27, r26
 410:	ee 1f       	adc	r30, r30
 412:	88 f7       	brcc	.-30     	; 0x3f6 <__divsf3_pse+0x90>
 414:	e0 95       	com	r30
 416:	08 95       	ret

00000418 <__floatunsisf>:
 418:	e8 94       	clt
 41a:	09 c0       	rjmp	.+18     	; 0x42e <__floatsisf+0x12>

0000041c <__floatsisf>:
 41c:	97 fb       	bst	r25, 7
 41e:	3e f4       	brtc	.+14     	; 0x42e <__floatsisf+0x12>
 420:	90 95       	com	r25
 422:	80 95       	com	r24
 424:	70 95       	com	r23
 426:	61 95       	neg	r22
 428:	7f 4f       	sbci	r23, 0xFF	; 255
 42a:	8f 4f       	sbci	r24, 0xFF	; 255
 42c:	9f 4f       	sbci	r25, 0xFF	; 255
 42e:	99 23       	and	r25, r25
 430:	a9 f0       	breq	.+42     	; 0x45c <__floatsisf+0x40>
 432:	f9 2f       	mov	r31, r25
 434:	96 e9       	ldi	r25, 0x96	; 150
 436:	bb 27       	eor	r27, r27
 438:	93 95       	inc	r25
 43a:	f6 95       	lsr	r31
 43c:	87 95       	ror	r24
 43e:	77 95       	ror	r23
 440:	67 95       	ror	r22
 442:	b7 95       	ror	r27
 444:	f1 11       	cpse	r31, r1
 446:	f8 cf       	rjmp	.-16     	; 0x438 <__floatsisf+0x1c>
 448:	fa f4       	brpl	.+62     	; 0x488 <__floatsisf+0x6c>
 44a:	bb 0f       	add	r27, r27
 44c:	11 f4       	brne	.+4      	; 0x452 <__floatsisf+0x36>
 44e:	60 ff       	sbrs	r22, 0
 450:	1b c0       	rjmp	.+54     	; 0x488 <__floatsisf+0x6c>
 452:	6f 5f       	subi	r22, 0xFF	; 255
 454:	7f 4f       	sbci	r23, 0xFF	; 255
 456:	8f 4f       	sbci	r24, 0xFF	; 255
 458:	9f 4f       	sbci	r25, 0xFF	; 255
 45a:	16 c0       	rjmp	.+44     	; 0x488 <__floatsisf+0x6c>
 45c:	88 23       	and	r24, r24
 45e:	11 f0       	breq	.+4      	; 0x464 <__floatsisf+0x48>
 460:	96 e9       	ldi	r25, 0x96	; 150
 462:	11 c0       	rjmp	.+34     	; 0x486 <__floatsisf+0x6a>
 464:	77 23       	and	r23, r23
 466:	21 f0       	breq	.+8      	; 0x470 <__floatsisf+0x54>
 468:	9e e8       	ldi	r25, 0x8E	; 142
 46a:	87 2f       	mov	r24, r23
 46c:	76 2f       	mov	r23, r22
 46e:	05 c0       	rjmp	.+10     	; 0x47a <__floatsisf+0x5e>
 470:	66 23       	and	r22, r22
 472:	71 f0       	breq	.+28     	; 0x490 <__floatsisf+0x74>
 474:	96 e8       	ldi	r25, 0x86	; 134
 476:	86 2f       	mov	r24, r22
 478:	70 e0       	ldi	r23, 0x00	; 0
 47a:	60 e0       	ldi	r22, 0x00	; 0
 47c:	2a f0       	brmi	.+10     	; 0x488 <__floatsisf+0x6c>
 47e:	9a 95       	dec	r25
 480:	66 0f       	add	r22, r22
 482:	77 1f       	adc	r23, r23
 484:	88 1f       	adc	r24, r24
 486:	da f7       	brpl	.-10     	; 0x47e <__floatsisf+0x62>
 488:	88 0f       	add	r24, r24
 48a:	96 95       	lsr	r25
 48c:	87 95       	ror	r24
 48e:	97 f9       	bld	r25, 7
 490:	08 95       	ret

00000492 <__fp_inf>:
 492:	97 f9       	bld	r25, 7
 494:	9f 67       	ori	r25, 0x7F	; 127
 496:	80 e8       	ldi	r24, 0x80	; 128
 498:	70 e0       	ldi	r23, 0x00	; 0
 49a:	60 e0       	ldi	r22, 0x00	; 0
 49c:	08 95       	ret

0000049e <__fp_nan>:
 49e:	9f ef       	ldi	r25, 0xFF	; 255
 4a0:	80 ec       	ldi	r24, 0xC0	; 192
 4a2:	08 95       	ret

000004a4 <__fp_pscA>:
 4a4:	00 24       	eor	r0, r0
 4a6:	0a 94       	dec	r0
 4a8:	16 16       	cp	r1, r22
 4aa:	17 06       	cpc	r1, r23
 4ac:	18 06       	cpc	r1, r24
 4ae:	09 06       	cpc	r0, r25
 4b0:	08 95       	ret

000004b2 <__fp_pscB>:
 4b2:	00 24       	eor	r0, r0
 4b4:	0a 94       	dec	r0
 4b6:	12 16       	cp	r1, r18
 4b8:	13 06       	cpc	r1, r19
 4ba:	14 06       	cpc	r1, r20
 4bc:	05 06       	cpc	r0, r21
 4be:	08 95       	ret

000004c0 <__fp_round>:
 4c0:	09 2e       	mov	r0, r25
 4c2:	03 94       	inc	r0
 4c4:	00 0c       	add	r0, r0
 4c6:	11 f4       	brne	.+4      	; 0x4cc <__fp_round+0xc>
 4c8:	88 23       	and	r24, r24
 4ca:	52 f0       	brmi	.+20     	; 0x4e0 <__fp_round+0x20>
 4cc:	bb 0f       	add	r27, r27
 4ce:	40 f4       	brcc	.+16     	; 0x4e0 <__fp_round+0x20>
 4d0:	bf 2b       	or	r27, r31
 4d2:	11 f4       	brne	.+4      	; 0x4d8 <__fp_round+0x18>
 4d4:	60 ff       	sbrs	r22, 0
 4d6:	04 c0       	rjmp	.+8      	; 0x4e0 <__fp_round+0x20>
 4d8:	6f 5f       	subi	r22, 0xFF	; 255
 4da:	7f 4f       	sbci	r23, 0xFF	; 255
 4dc:	8f 4f       	sbci	r24, 0xFF	; 255
 4de:	9f 4f       	sbci	r25, 0xFF	; 255
 4e0:	08 95       	ret

000004e2 <__fp_split3>:
 4e2:	57 fd       	sbrc	r21, 7
 4e4:	90 58       	subi	r25, 0x80	; 128
 4e6:	44 0f       	add	r20, r20
 4e8:	55 1f       	adc	r21, r21
 4ea:	59 f0       	breq	.+22     	; 0x502 <__fp_splitA+0x10>
 4ec:	5f 3f       	cpi	r21, 0xFF	; 255
 4ee:	71 f0       	breq	.+28     	; 0x50c <__fp_splitA+0x1a>
 4f0:	47 95       	ror	r20

000004f2 <__fp_splitA>:
 4f2:	88 0f       	add	r24, r24
 4f4:	97 fb       	bst	r25, 7
 4f6:	99 1f       	adc	r25, r25
 4f8:	61 f0       	breq	.+24     	; 0x512 <__fp_splitA+0x20>
 4fa:	9f 3f       	cpi	r25, 0xFF	; 255
 4fc:	79 f0       	breq	.+30     	; 0x51c <__fp_splitA+0x2a>
 4fe:	87 95       	ror	r24
 500:	08 95       	ret
 502:	12 16       	cp	r1, r18
 504:	13 06       	cpc	r1, r19
 506:	14 06       	cpc	r1, r20
 508:	55 1f       	adc	r21, r21
 50a:	f2 cf       	rjmp	.-28     	; 0x4f0 <__fp_split3+0xe>
 50c:	46 95       	lsr	r20
 50e:	f1 df       	rcall	.-30     	; 0x4f2 <__fp_splitA>
 510:	08 c0       	rjmp	.+16     	; 0x522 <__fp_splitA+0x30>
 512:	16 16       	cp	r1, r22
 514:	17 06       	cpc	r1, r23
 516:	18 06       	cpc	r1, r24
 518:	99 1f       	adc	r25, r25
 51a:	f1 cf       	rjmp	.-30     	; 0x4fe <__fp_splitA+0xc>
 51c:	86 95       	lsr	r24
 51e:	71 05       	cpc	r23, r1
 520:	61 05       	cpc	r22, r1
 522:	08 94       	sec
 524:	08 95       	ret

00000526 <__fp_zero>:
 526:	e8 94       	clt

00000528 <__fp_szero>:
 528:	bb 27       	eor	r27, r27
 52a:	66 27       	eor	r22, r22
 52c:	77 27       	eor	r23, r23
 52e:	cb 01       	movw	r24, r22
 530:	97 f9       	bld	r25, 7
 532:	08 95       	ret

00000534 <dtostrf>:
 534:	ef 92       	push	r14
 536:	ff 92       	push	r15
 538:	0f 93       	push	r16
 53a:	1f 93       	push	r17
 53c:	f2 2f       	mov	r31, r18
 53e:	f0 2e       	mov	r15, r16
 540:	47 fd       	sbrc	r20, 7
 542:	02 c0       	rjmp	.+4      	; 0x548 <dtostrf+0x14>
 544:	e4 e0       	ldi	r30, 0x04	; 4
 546:	01 c0       	rjmp	.+2      	; 0x54a <dtostrf+0x16>
 548:	e4 e1       	ldi	r30, 0x14	; 20
 54a:	24 2f       	mov	r18, r20
 54c:	33 27       	eor	r19, r19
 54e:	27 fd       	sbrc	r18, 7
 550:	30 95       	com	r19
 552:	37 ff       	sbrs	r19, 7
 554:	03 c0       	rjmp	.+6      	; 0x55c <dtostrf+0x28>
 556:	30 95       	com	r19
 558:	21 95       	neg	r18
 55a:	3f 4f       	sbci	r19, 0xFF	; 255
 55c:	4f 2d       	mov	r20, r15
 55e:	51 2f       	mov	r21, r17
 560:	0f 2f       	mov	r16, r31
 562:	ee 2e       	mov	r14, r30
 564:	0e 94 c6 02 	call	0x58c	; 0x58c <dtoa_prf>
 568:	8f 2d       	mov	r24, r15
 56a:	91 2f       	mov	r25, r17
 56c:	1f 91       	pop	r17
 56e:	0f 91       	pop	r16
 570:	ff 90       	pop	r15
 572:	ef 90       	pop	r14
 574:	08 95       	ret

00000576 <strcat>:
 576:	fb 01       	movw	r30, r22
 578:	dc 01       	movw	r26, r24
 57a:	0d 90       	ld	r0, X+
 57c:	00 20       	and	r0, r0
 57e:	e9 f7       	brne	.-6      	; 0x57a <strcat+0x4>
 580:	11 97       	sbiw	r26, 0x01	; 1
 582:	01 90       	ld	r0, Z+
 584:	0d 92       	st	X+, r0
 586:	00 20       	and	r0, r0
 588:	e1 f7       	brne	.-8      	; 0x582 <strcat+0xc>
 58a:	08 95       	ret

0000058c <dtoa_prf>:
 58c:	a9 e0       	ldi	r26, 0x09	; 9
 58e:	b0 e0       	ldi	r27, 0x00	; 0
 590:	ec ec       	ldi	r30, 0xCC	; 204
 592:	f2 e0       	ldi	r31, 0x02	; 2
 594:	0c 94 04 05 	jmp	0xa08	; 0xa08 <__prologue_saves__+0x8>
 598:	6a 01       	movw	r12, r20
 59a:	12 2f       	mov	r17, r18
 59c:	a0 2e       	mov	r10, r16
 59e:	be 2c       	mov	r11, r14
 5a0:	2b e3       	ldi	r18, 0x3B	; 59
 5a2:	20 17       	cp	r18, r16
 5a4:	18 f4       	brcc	.+6      	; 0x5ac <dtoa_prf+0x20>
 5a6:	2c e3       	ldi	r18, 0x3C	; 60
 5a8:	92 2e       	mov	r9, r18
 5aa:	02 c0       	rjmp	.+4      	; 0x5b0 <dtoa_prf+0x24>
 5ac:	90 2e       	mov	r9, r16
 5ae:	93 94       	inc	r9
 5b0:	ae 01       	movw	r20, r28
 5b2:	4f 5f       	subi	r20, 0xFF	; 255
 5b4:	5f 4f       	sbci	r21, 0xFF	; 255
 5b6:	27 e0       	ldi	r18, 0x07	; 7
 5b8:	09 2d       	mov	r16, r9
 5ba:	0e 94 28 04 	call	0x850	; 0x850 <__ftoa_engine>
 5be:	bc 01       	movw	r22, r24
 5c0:	89 81       	ldd	r24, Y+1	; 0x01
 5c2:	e8 2e       	mov	r14, r24
 5c4:	ff 24       	eor	r15, r15
 5c6:	c7 01       	movw	r24, r14
 5c8:	89 70       	andi	r24, 0x09	; 9
 5ca:	90 70       	andi	r25, 0x00	; 0
 5cc:	01 97       	sbiw	r24, 0x01	; 1
 5ce:	11 f4       	brne	.+4      	; 0x5d4 <dtoa_prf+0x48>
 5d0:	ad e2       	ldi	r26, 0x2D	; 45
 5d2:	09 c0       	rjmp	.+18     	; 0x5e6 <dtoa_prf+0x5a>
 5d4:	b1 fe       	sbrs	r11, 1
 5d6:	02 c0       	rjmp	.+4      	; 0x5dc <dtoa_prf+0x50>
 5d8:	ab e2       	ldi	r26, 0x2B	; 43
 5da:	05 c0       	rjmp	.+10     	; 0x5e6 <dtoa_prf+0x5a>
 5dc:	b0 fc       	sbrc	r11, 0
 5de:	02 c0       	rjmp	.+4      	; 0x5e4 <dtoa_prf+0x58>
 5e0:	a0 e0       	ldi	r26, 0x00	; 0
 5e2:	01 c0       	rjmp	.+2      	; 0x5e6 <dtoa_prf+0x5a>
 5e4:	a0 e2       	ldi	r26, 0x20	; 32
 5e6:	e3 fe       	sbrs	r14, 3
 5e8:	3b c0       	rjmp	.+118    	; 0x660 <dtoa_prf+0xd4>
 5ea:	aa 23       	and	r26, r26
 5ec:	11 f4       	brne	.+4      	; 0x5f2 <dtoa_prf+0x66>
 5ee:	23 e0       	ldi	r18, 0x03	; 3
 5f0:	01 c0       	rjmp	.+2      	; 0x5f4 <dtoa_prf+0x68>
 5f2:	24 e0       	ldi	r18, 0x04	; 4
 5f4:	21 17       	cp	r18, r17
 5f6:	10 f0       	brcs	.+4      	; 0x5fc <dtoa_prf+0x70>
 5f8:	20 e0       	ldi	r18, 0x00	; 0
 5fa:	02 c0       	rjmp	.+4      	; 0x600 <dtoa_prf+0x74>
 5fc:	12 1b       	sub	r17, r18
 5fe:	21 2f       	mov	r18, r17
 600:	eb 2c       	mov	r14, r11
 602:	b4 fe       	sbrs	r11, 4
 604:	02 c0       	rjmp	.+4      	; 0x60a <dtoa_prf+0x7e>
 606:	32 2f       	mov	r19, r18
 608:	0a c0       	rjmp	.+20     	; 0x61e <dtoa_prf+0x92>
 60a:	f6 01       	movw	r30, r12
 60c:	32 2f       	mov	r19, r18
 60e:	80 e2       	ldi	r24, 0x20	; 32
 610:	02 c0       	rjmp	.+4      	; 0x616 <dtoa_prf+0x8a>
 612:	81 93       	st	Z+, r24
 614:	31 50       	subi	r19, 0x01	; 1
 616:	33 23       	and	r19, r19
 618:	e1 f7       	brne	.-8      	; 0x612 <dtoa_prf+0x86>
 61a:	c2 0e       	add	r12, r18
 61c:	d1 1c       	adc	r13, r1
 61e:	aa 23       	and	r26, r26
 620:	19 f0       	breq	.+6      	; 0x628 <dtoa_prf+0x9c>
 622:	f6 01       	movw	r30, r12
 624:	a1 93       	st	Z+, r26
 626:	6f 01       	movw	r12, r30
 628:	f6 01       	movw	r30, r12
 62a:	31 96       	adiw	r30, 0x01	; 1
 62c:	e2 fe       	sbrs	r14, 2
 62e:	05 c0       	rjmp	.+10     	; 0x63a <dtoa_prf+0xae>
 630:	9e e4       	ldi	r25, 0x4E	; 78
 632:	d6 01       	movw	r26, r12
 634:	9c 93       	st	X, r25
 636:	81 e4       	ldi	r24, 0x41	; 65
 638:	04 c0       	rjmp	.+8      	; 0x642 <dtoa_prf+0xb6>
 63a:	9e e6       	ldi	r25, 0x6E	; 110
 63c:	d6 01       	movw	r26, r12
 63e:	9c 93       	st	X, r25
 640:	81 e6       	ldi	r24, 0x61	; 97
 642:	11 96       	adiw	r26, 0x01	; 1
 644:	8c 93       	st	X, r24
 646:	91 83       	std	Z+1, r25	; 0x01
 648:	32 96       	adiw	r30, 0x02	; 2
 64a:	df 01       	movw	r26, r30
 64c:	83 2f       	mov	r24, r19
 64e:	90 e2       	ldi	r25, 0x20	; 32
 650:	02 c0       	rjmp	.+4      	; 0x656 <dtoa_prf+0xca>
 652:	9d 93       	st	X+, r25
 654:	81 50       	subi	r24, 0x01	; 1
 656:	88 23       	and	r24, r24
 658:	e1 f7       	brne	.-8      	; 0x652 <dtoa_prf+0xc6>
 65a:	e3 0f       	add	r30, r19
 65c:	f1 1d       	adc	r31, r1
 65e:	40 c0       	rjmp	.+128    	; 0x6e0 <dtoa_prf+0x154>
 660:	e2 fe       	sbrs	r14, 2
 662:	42 c0       	rjmp	.+132    	; 0x6e8 <dtoa_prf+0x15c>
 664:	aa 23       	and	r26, r26
 666:	11 f4       	brne	.+4      	; 0x66c <dtoa_prf+0xe0>
 668:	23 e0       	ldi	r18, 0x03	; 3
 66a:	01 c0       	rjmp	.+2      	; 0x66e <dtoa_prf+0xe2>
 66c:	24 e0       	ldi	r18, 0x04	; 4
 66e:	21 17       	cp	r18, r17
 670:	10 f0       	brcs	.+4      	; 0x676 <dtoa_prf+0xea>
 672:	20 e0       	ldi	r18, 0x00	; 0
 674:	02 c0       	rjmp	.+4      	; 0x67a <dtoa_prf+0xee>
 676:	12 1b       	sub	r17, r18
 678:	21 2f       	mov	r18, r17
 67a:	eb 2c       	mov	r14, r11
 67c:	b4 fe       	sbrs	r11, 4
 67e:	02 c0       	rjmp	.+4      	; 0x684 <dtoa_prf+0xf8>
 680:	92 2f       	mov	r25, r18
 682:	0a c0       	rjmp	.+20     	; 0x698 <dtoa_prf+0x10c>
 684:	f6 01       	movw	r30, r12
 686:	92 2f       	mov	r25, r18
 688:	80 e2       	ldi	r24, 0x20	; 32
 68a:	02 c0       	rjmp	.+4      	; 0x690 <dtoa_prf+0x104>
 68c:	81 93       	st	Z+, r24
 68e:	91 50       	subi	r25, 0x01	; 1
 690:	99 23       	and	r25, r25
 692:	e1 f7       	brne	.-8      	; 0x68c <dtoa_prf+0x100>
 694:	c2 0e       	add	r12, r18
 696:	d1 1c       	adc	r13, r1
 698:	aa 23       	and	r26, r26
 69a:	19 f0       	breq	.+6      	; 0x6a2 <dtoa_prf+0x116>
 69c:	f6 01       	movw	r30, r12
 69e:	a1 93       	st	Z+, r26
 6a0:	6f 01       	movw	r12, r30
 6a2:	f6 01       	movw	r30, r12
 6a4:	31 96       	adiw	r30, 0x01	; 1
 6a6:	e2 fe       	sbrs	r14, 2
 6a8:	08 c0       	rjmp	.+16     	; 0x6ba <dtoa_prf+0x12e>
 6aa:	89 e4       	ldi	r24, 0x49	; 73
 6ac:	d6 01       	movw	r26, r12
 6ae:	8c 93       	st	X, r24
 6b0:	8e e4       	ldi	r24, 0x4E	; 78
 6b2:	11 96       	adiw	r26, 0x01	; 1
 6b4:	8c 93       	st	X, r24
 6b6:	86 e4       	ldi	r24, 0x46	; 70
 6b8:	07 c0       	rjmp	.+14     	; 0x6c8 <dtoa_prf+0x13c>
 6ba:	89 e6       	ldi	r24, 0x69	; 105
 6bc:	d6 01       	movw	r26, r12
 6be:	8c 93       	st	X, r24
 6c0:	8e e6       	ldi	r24, 0x6E	; 110
 6c2:	11 96       	adiw	r26, 0x01	; 1
 6c4:	8c 93       	st	X, r24
 6c6:	86 e6       	ldi	r24, 0x66	; 102
 6c8:	81 83       	std	Z+1, r24	; 0x01
 6ca:	32 96       	adiw	r30, 0x02	; 2
 6cc:	df 01       	movw	r26, r30
 6ce:	89 2f       	mov	r24, r25
 6d0:	20 e2       	ldi	r18, 0x20	; 32
 6d2:	02 c0       	rjmp	.+4      	; 0x6d8 <dtoa_prf+0x14c>
 6d4:	2d 93       	st	X+, r18
 6d6:	81 50       	subi	r24, 0x01	; 1
 6d8:	88 23       	and	r24, r24
 6da:	e1 f7       	brne	.-8      	; 0x6d4 <dtoa_prf+0x148>
 6dc:	e9 0f       	add	r30, r25
 6de:	f1 1d       	adc	r31, r1
 6e0:	10 82       	st	Z, r1
 6e2:	2e ef       	ldi	r18, 0xFE	; 254
 6e4:	3f ef       	ldi	r19, 0xFF	; 255
 6e6:	af c0       	rjmp	.+350    	; 0x846 <dtoa_prf+0x2ba>
 6e8:	16 16       	cp	r1, r22
 6ea:	17 06       	cpc	r1, r23
 6ec:	1c f0       	brlt	.+6      	; 0x6f4 <dtoa_prf+0x168>
 6ee:	41 e0       	ldi	r20, 0x01	; 1
 6f0:	50 e0       	ldi	r21, 0x00	; 0
 6f2:	03 c0       	rjmp	.+6      	; 0x6fa <dtoa_prf+0x16e>
 6f4:	ab 01       	movw	r20, r22
 6f6:	4f 5f       	subi	r20, 0xFF	; 255
 6f8:	5f 4f       	sbci	r21, 0xFF	; 255
 6fa:	aa 20       	and	r10, r10
 6fc:	19 f4       	brne	.+6      	; 0x704 <dtoa_prf+0x178>
 6fe:	80 e0       	ldi	r24, 0x00	; 0
 700:	90 e0       	ldi	r25, 0x00	; 0
 702:	03 c0       	rjmp	.+6      	; 0x70a <dtoa_prf+0x17e>
 704:	8a 2d       	mov	r24, r10
 706:	90 e0       	ldi	r25, 0x00	; 0
 708:	01 96       	adiw	r24, 0x01	; 1
 70a:	20 e0       	ldi	r18, 0x00	; 0
 70c:	30 e0       	ldi	r19, 0x00	; 0
 70e:	aa 23       	and	r26, r26
 710:	11 f0       	breq	.+4      	; 0x716 <dtoa_prf+0x18a>
 712:	21 e0       	ldi	r18, 0x01	; 1
 714:	30 e0       	ldi	r19, 0x00	; 0
 716:	24 0f       	add	r18, r20
 718:	35 1f       	adc	r19, r21
 71a:	28 0f       	add	r18, r24
 71c:	39 1f       	adc	r19, r25
 71e:	81 2f       	mov	r24, r17
 720:	90 e0       	ldi	r25, 0x00	; 0
 722:	28 17       	cp	r18, r24
 724:	39 07       	cpc	r19, r25
 726:	14 f0       	brlt	.+4      	; 0x72c <dtoa_prf+0x1a0>
 728:	20 e0       	ldi	r18, 0x00	; 0
 72a:	02 c0       	rjmp	.+4      	; 0x730 <dtoa_prf+0x1a4>
 72c:	12 1b       	sub	r17, r18
 72e:	21 2f       	mov	r18, r17
 730:	4b 2d       	mov	r20, r11
 732:	50 e0       	ldi	r21, 0x00	; 0
 734:	ca 01       	movw	r24, r20
 736:	80 71       	andi	r24, 0x10	; 16
 738:	90 70       	andi	r25, 0x00	; 0
 73a:	b4 fc       	sbrc	r11, 4
 73c:	0d c0       	rjmp	.+26     	; 0x758 <dtoa_prf+0x1cc>
 73e:	b3 fc       	sbrc	r11, 3
 740:	0b c0       	rjmp	.+22     	; 0x758 <dtoa_prf+0x1cc>
 742:	f6 01       	movw	r30, r12
 744:	32 2f       	mov	r19, r18
 746:	40 e2       	ldi	r20, 0x20	; 32
 748:	02 c0       	rjmp	.+4      	; 0x74e <dtoa_prf+0x1c2>
 74a:	41 93       	st	Z+, r20
 74c:	31 50       	subi	r19, 0x01	; 1
 74e:	33 23       	and	r19, r19
 750:	e1 f7       	brne	.-8      	; 0x74a <dtoa_prf+0x1be>
 752:	c2 0e       	add	r12, r18
 754:	d1 1c       	adc	r13, r1
 756:	01 c0       	rjmp	.+2      	; 0x75a <dtoa_prf+0x1ce>
 758:	32 2f       	mov	r19, r18
 75a:	aa 23       	and	r26, r26
 75c:	19 f0       	breq	.+6      	; 0x764 <dtoa_prf+0x1d8>
 75e:	f6 01       	movw	r30, r12
 760:	a1 93       	st	Z+, r26
 762:	6f 01       	movw	r12, r30
 764:	89 2b       	or	r24, r25
 766:	11 f0       	breq	.+4      	; 0x76c <dtoa_prf+0x1e0>
 768:	13 2f       	mov	r17, r19
 76a:	0a c0       	rjmp	.+20     	; 0x780 <dtoa_prf+0x1f4>
 76c:	f6 01       	movw	r30, r12
 76e:	13 2f       	mov	r17, r19
 770:	80 e3       	ldi	r24, 0x30	; 48
 772:	02 c0       	rjmp	.+4      	; 0x778 <dtoa_prf+0x1ec>
 774:	81 93       	st	Z+, r24
 776:	11 50       	subi	r17, 0x01	; 1
 778:	11 23       	and	r17, r17
 77a:	e1 f7       	brne	.-8      	; 0x774 <dtoa_prf+0x1e8>
 77c:	c3 0e       	add	r12, r19
 77e:	d1 1c       	adc	r13, r1
 780:	09 2d       	mov	r16, r9
 782:	06 0f       	add	r16, r22
 784:	ba 80       	ldd	r11, Y+2	; 0x02
 786:	90 e1       	ldi	r25, 0x10	; 16
 788:	89 2e       	mov	r8, r25
 78a:	91 2c       	mov	r9, r1
 78c:	8e 20       	and	r8, r14
 78e:	9f 20       	and	r9, r15
 790:	e4 fe       	sbrs	r14, 4
 792:	04 c0       	rjmp	.+8      	; 0x79c <dtoa_prf+0x210>
 794:	f1 e3       	ldi	r31, 0x31	; 49
 796:	bf 16       	cp	r11, r31
 798:	09 f4       	brne	.+2      	; 0x79c <dtoa_prf+0x210>
 79a:	01 50       	subi	r16, 0x01	; 1
 79c:	10 16       	cp	r1, r16
 79e:	14 f0       	brlt	.+4      	; 0x7a4 <dtoa_prf+0x218>
 7a0:	01 e0       	ldi	r16, 0x01	; 1
 7a2:	03 c0       	rjmp	.+6      	; 0x7aa <dtoa_prf+0x21e>
 7a4:	09 30       	cpi	r16, 0x09	; 9
 7a6:	08 f0       	brcs	.+2      	; 0x7aa <dtoa_prf+0x21e>
 7a8:	08 e0       	ldi	r16, 0x08	; 8
 7aa:	9b 01       	movw	r18, r22
 7ac:	77 ff       	sbrs	r23, 7
 7ae:	02 c0       	rjmp	.+4      	; 0x7b4 <dtoa_prf+0x228>
 7b0:	20 e0       	ldi	r18, 0x00	; 0
 7b2:	30 e0       	ldi	r19, 0x00	; 0
 7b4:	cb 01       	movw	r24, r22
 7b6:	01 96       	adiw	r24, 0x01	; 1
 7b8:	82 1b       	sub	r24, r18
 7ba:	93 0b       	sbc	r25, r19
 7bc:	fe 01       	movw	r30, r28
 7be:	31 96       	adiw	r30, 0x01	; 1
 7c0:	e8 0f       	add	r30, r24
 7c2:	f9 1f       	adc	r31, r25
 7c4:	8e e2       	ldi	r24, 0x2E	; 46
 7c6:	f8 2e       	mov	r15, r24
 7c8:	3b 01       	movw	r6, r22
 7ca:	60 1a       	sub	r6, r16
 7cc:	71 08       	sbc	r7, r1
 7ce:	8a 2d       	mov	r24, r10
 7d0:	90 e0       	ldi	r25, 0x00	; 0
 7d2:	44 27       	eor	r20, r20
 7d4:	55 27       	eor	r21, r21
 7d6:	48 1b       	sub	r20, r24
 7d8:	59 0b       	sbc	r21, r25
 7da:	8f ef       	ldi	r24, 0xFF	; 255
 7dc:	2f 3f       	cpi	r18, 0xFF	; 255
 7de:	38 07       	cpc	r19, r24
 7e0:	19 f4       	brne	.+6      	; 0x7e8 <dtoa_prf+0x25c>
 7e2:	d6 01       	movw	r26, r12
 7e4:	fd 92       	st	X+, r15
 7e6:	6d 01       	movw	r12, r26
 7e8:	62 17       	cp	r22, r18
 7ea:	73 07       	cpc	r23, r19
 7ec:	2c f0       	brlt	.+10     	; 0x7f8 <dtoa_prf+0x26c>
 7ee:	62 16       	cp	r6, r18
 7f0:	73 06       	cpc	r7, r19
 7f2:	14 f4       	brge	.+4      	; 0x7f8 <dtoa_prf+0x26c>
 7f4:	80 81       	ld	r24, Z
 7f6:	01 c0       	rjmp	.+2      	; 0x7fa <dtoa_prf+0x26e>
 7f8:	80 e3       	ldi	r24, 0x30	; 48
 7fa:	21 50       	subi	r18, 0x01	; 1
 7fc:	30 40       	sbci	r19, 0x00	; 0
 7fe:	31 96       	adiw	r30, 0x01	; 1
 800:	24 17       	cp	r18, r20
 802:	35 07       	cpc	r19, r21
 804:	24 f0       	brlt	.+8      	; 0x80e <dtoa_prf+0x282>
 806:	d6 01       	movw	r26, r12
 808:	8d 93       	st	X+, r24
 80a:	6d 01       	movw	r12, r26
 80c:	e6 cf       	rjmp	.-52     	; 0x7da <dtoa_prf+0x24e>
 80e:	26 17       	cp	r18, r22
 810:	37 07       	cpc	r19, r23
 812:	49 f4       	brne	.+18     	; 0x826 <dtoa_prf+0x29a>
 814:	b5 e3       	ldi	r27, 0x35	; 53
 816:	bb 15       	cp	r27, r11
 818:	28 f0       	brcs	.+10     	; 0x824 <dtoa_prf+0x298>
 81a:	bb 16       	cp	r11, r27
 81c:	21 f4       	brne	.+8      	; 0x826 <dtoa_prf+0x29a>
 81e:	81 14       	cp	r8, r1
 820:	91 04       	cpc	r9, r1
 822:	09 f4       	brne	.+2      	; 0x826 <dtoa_prf+0x29a>
 824:	81 e3       	ldi	r24, 0x31	; 49
 826:	f6 01       	movw	r30, r12
 828:	81 93       	st	Z+, r24
 82a:	d6 01       	movw	r26, r12
 82c:	81 2f       	mov	r24, r17
 82e:	90 e2       	ldi	r25, 0x20	; 32
 830:	02 c0       	rjmp	.+4      	; 0x836 <dtoa_prf+0x2aa>
 832:	9c 93       	st	X, r25
 834:	81 50       	subi	r24, 0x01	; 1
 836:	11 96       	adiw	r26, 0x01	; 1
 838:	88 23       	and	r24, r24
 83a:	d9 f7       	brne	.-10     	; 0x832 <dtoa_prf+0x2a6>
 83c:	e1 0f       	add	r30, r17
 83e:	f1 1d       	adc	r31, r1
 840:	10 82       	st	Z, r1
 842:	20 e0       	ldi	r18, 0x00	; 0
 844:	30 e0       	ldi	r19, 0x00	; 0
 846:	c9 01       	movw	r24, r18
 848:	29 96       	adiw	r28, 0x09	; 9
 84a:	ee e0       	ldi	r30, 0x0E	; 14
 84c:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__epilogue_restores__+0x8>

00000850 <__ftoa_engine>:
 850:	28 30       	cpi	r18, 0x08	; 8
 852:	08 f0       	brcs	.+2      	; 0x856 <__ftoa_engine+0x6>
 854:	27 e0       	ldi	r18, 0x07	; 7
 856:	33 27       	eor	r19, r19
 858:	da 01       	movw	r26, r20
 85a:	99 0f       	add	r25, r25
 85c:	31 1d       	adc	r19, r1
 85e:	87 fd       	sbrc	r24, 7
 860:	91 60       	ori	r25, 0x01	; 1
 862:	00 96       	adiw	r24, 0x00	; 0
 864:	61 05       	cpc	r22, r1
 866:	71 05       	cpc	r23, r1
 868:	39 f4       	brne	.+14     	; 0x878 <__stack+0x19>
 86a:	32 60       	ori	r19, 0x02	; 2
 86c:	2e 5f       	subi	r18, 0xFE	; 254
 86e:	3d 93       	st	X+, r19
 870:	30 e3       	ldi	r19, 0x30	; 48
 872:	2a 95       	dec	r18
 874:	e1 f7       	brne	.-8      	; 0x86e <__stack+0xf>
 876:	08 95       	ret
 878:	9f 3f       	cpi	r25, 0xFF	; 255
 87a:	30 f0       	brcs	.+12     	; 0x888 <__stack+0x29>
 87c:	80 38       	cpi	r24, 0x80	; 128
 87e:	71 05       	cpc	r23, r1
 880:	61 05       	cpc	r22, r1
 882:	09 f0       	breq	.+2      	; 0x886 <__stack+0x27>
 884:	3c 5f       	subi	r19, 0xFC	; 252
 886:	3c 5f       	subi	r19, 0xFC	; 252
 888:	3d 93       	st	X+, r19
 88a:	91 30       	cpi	r25, 0x01	; 1
 88c:	08 f0       	brcs	.+2      	; 0x890 <__stack+0x31>
 88e:	80 68       	ori	r24, 0x80	; 128
 890:	91 1d       	adc	r25, r1
 892:	df 93       	push	r29
 894:	cf 93       	push	r28
 896:	1f 93       	push	r17
 898:	0f 93       	push	r16
 89a:	ff 92       	push	r15
 89c:	ef 92       	push	r14
 89e:	19 2f       	mov	r17, r25
 8a0:	98 7f       	andi	r25, 0xF8	; 248
 8a2:	96 95       	lsr	r25
 8a4:	e9 2f       	mov	r30, r25
 8a6:	96 95       	lsr	r25
 8a8:	96 95       	lsr	r25
 8aa:	e9 0f       	add	r30, r25
 8ac:	ff 27       	eor	r31, r31
 8ae:	e2 55       	subi	r30, 0x52	; 82
 8b0:	ff 4f       	sbci	r31, 0xFF	; 255
 8b2:	99 27       	eor	r25, r25
 8b4:	33 27       	eor	r19, r19
 8b6:	ee 24       	eor	r14, r14
 8b8:	ff 24       	eor	r15, r15
 8ba:	a7 01       	movw	r20, r14
 8bc:	e7 01       	movw	r28, r14
 8be:	05 90       	lpm	r0, Z+
 8c0:	08 94       	sec
 8c2:	07 94       	ror	r0
 8c4:	28 f4       	brcc	.+10     	; 0x8d0 <__stack+0x71>
 8c6:	36 0f       	add	r19, r22
 8c8:	e7 1e       	adc	r14, r23
 8ca:	f8 1e       	adc	r15, r24
 8cc:	49 1f       	adc	r20, r25
 8ce:	51 1d       	adc	r21, r1
 8d0:	66 0f       	add	r22, r22
 8d2:	77 1f       	adc	r23, r23
 8d4:	88 1f       	adc	r24, r24
 8d6:	99 1f       	adc	r25, r25
 8d8:	06 94       	lsr	r0
 8da:	a1 f7       	brne	.-24     	; 0x8c4 <__stack+0x65>
 8dc:	05 90       	lpm	r0, Z+
 8de:	07 94       	ror	r0
 8e0:	28 f4       	brcc	.+10     	; 0x8ec <__stack+0x8d>
 8e2:	e7 0e       	add	r14, r23
 8e4:	f8 1e       	adc	r15, r24
 8e6:	49 1f       	adc	r20, r25
 8e8:	56 1f       	adc	r21, r22
 8ea:	c1 1d       	adc	r28, r1
 8ec:	77 0f       	add	r23, r23
 8ee:	88 1f       	adc	r24, r24
 8f0:	99 1f       	adc	r25, r25
 8f2:	66 1f       	adc	r22, r22
 8f4:	06 94       	lsr	r0
 8f6:	a1 f7       	brne	.-24     	; 0x8e0 <__stack+0x81>
 8f8:	05 90       	lpm	r0, Z+
 8fa:	07 94       	ror	r0
 8fc:	28 f4       	brcc	.+10     	; 0x908 <__stack+0xa9>
 8fe:	f8 0e       	add	r15, r24
 900:	49 1f       	adc	r20, r25
 902:	56 1f       	adc	r21, r22
 904:	c7 1f       	adc	r28, r23
 906:	d1 1d       	adc	r29, r1
 908:	88 0f       	add	r24, r24
 90a:	99 1f       	adc	r25, r25
 90c:	66 1f       	adc	r22, r22
 90e:	77 1f       	adc	r23, r23
 910:	06 94       	lsr	r0
 912:	a1 f7       	brne	.-24     	; 0x8fc <__stack+0x9d>
 914:	05 90       	lpm	r0, Z+
 916:	07 94       	ror	r0
 918:	20 f4       	brcc	.+8      	; 0x922 <__stack+0xc3>
 91a:	49 0f       	add	r20, r25
 91c:	56 1f       	adc	r21, r22
 91e:	c7 1f       	adc	r28, r23
 920:	d8 1f       	adc	r29, r24
 922:	99 0f       	add	r25, r25
 924:	66 1f       	adc	r22, r22
 926:	77 1f       	adc	r23, r23
 928:	88 1f       	adc	r24, r24
 92a:	06 94       	lsr	r0
 92c:	a9 f7       	brne	.-22     	; 0x918 <__stack+0xb9>
 92e:	84 91       	lpm	r24, Z+
 930:	10 95       	com	r17
 932:	17 70       	andi	r17, 0x07	; 7
 934:	41 f0       	breq	.+16     	; 0x946 <__stack+0xe7>
 936:	d6 95       	lsr	r29
 938:	c7 95       	ror	r28
 93a:	57 95       	ror	r21
 93c:	47 95       	ror	r20
 93e:	f7 94       	ror	r15
 940:	e7 94       	ror	r14
 942:	1a 95       	dec	r17
 944:	c1 f7       	brne	.-16     	; 0x936 <__stack+0xd7>
 946:	e4 e5       	ldi	r30, 0x54	; 84
 948:	f0 e0       	ldi	r31, 0x00	; 0
 94a:	68 94       	set
 94c:	15 90       	lpm	r1, Z+
 94e:	15 91       	lpm	r17, Z+
 950:	35 91       	lpm	r19, Z+
 952:	65 91       	lpm	r22, Z+
 954:	95 91       	lpm	r25, Z+
 956:	05 90       	lpm	r0, Z+
 958:	7f e2       	ldi	r23, 0x2F	; 47
 95a:	73 95       	inc	r23
 95c:	e1 18       	sub	r14, r1
 95e:	f1 0a       	sbc	r15, r17
 960:	43 0b       	sbc	r20, r19
 962:	56 0b       	sbc	r21, r22
 964:	c9 0b       	sbc	r28, r25
 966:	d0 09       	sbc	r29, r0
 968:	c0 f7       	brcc	.-16     	; 0x95a <__stack+0xfb>
 96a:	e1 0c       	add	r14, r1
 96c:	f1 1e       	adc	r15, r17
 96e:	43 1f       	adc	r20, r19
 970:	56 1f       	adc	r21, r22
 972:	c9 1f       	adc	r28, r25
 974:	d0 1d       	adc	r29, r0
 976:	7e f4       	brtc	.+30     	; 0x996 <__stack+0x137>
 978:	70 33       	cpi	r23, 0x30	; 48
 97a:	11 f4       	brne	.+4      	; 0x980 <__stack+0x121>
 97c:	8a 95       	dec	r24
 97e:	e6 cf       	rjmp	.-52     	; 0x94c <__stack+0xed>
 980:	e8 94       	clt
 982:	01 50       	subi	r16, 0x01	; 1
 984:	30 f0       	brcs	.+12     	; 0x992 <__stack+0x133>
 986:	08 0f       	add	r16, r24
 988:	0a f4       	brpl	.+2      	; 0x98c <__stack+0x12d>
 98a:	00 27       	eor	r16, r16
 98c:	02 17       	cp	r16, r18
 98e:	08 f4       	brcc	.+2      	; 0x992 <__stack+0x133>
 990:	20 2f       	mov	r18, r16
 992:	23 95       	inc	r18
 994:	02 2f       	mov	r16, r18
 996:	7a 33       	cpi	r23, 0x3A	; 58
 998:	28 f0       	brcs	.+10     	; 0x9a4 <__stack+0x145>
 99a:	79 e3       	ldi	r23, 0x39	; 57
 99c:	7d 93       	st	X+, r23
 99e:	2a 95       	dec	r18
 9a0:	e9 f7       	brne	.-6      	; 0x99c <__stack+0x13d>
 9a2:	10 c0       	rjmp	.+32     	; 0x9c4 <__stack+0x165>
 9a4:	7d 93       	st	X+, r23
 9a6:	2a 95       	dec	r18
 9a8:	89 f6       	brne	.-94     	; 0x94c <__stack+0xed>
 9aa:	06 94       	lsr	r0
 9ac:	97 95       	ror	r25
 9ae:	67 95       	ror	r22
 9b0:	37 95       	ror	r19
 9b2:	17 95       	ror	r17
 9b4:	17 94       	ror	r1
 9b6:	e1 18       	sub	r14, r1
 9b8:	f1 0a       	sbc	r15, r17
 9ba:	43 0b       	sbc	r20, r19
 9bc:	56 0b       	sbc	r21, r22
 9be:	c9 0b       	sbc	r28, r25
 9c0:	d0 09       	sbc	r29, r0
 9c2:	98 f0       	brcs	.+38     	; 0x9ea <__stack+0x18b>
 9c4:	23 95       	inc	r18
 9c6:	7e 91       	ld	r23, -X
 9c8:	73 95       	inc	r23
 9ca:	7a 33       	cpi	r23, 0x3A	; 58
 9cc:	08 f0       	brcs	.+2      	; 0x9d0 <__stack+0x171>
 9ce:	70 e3       	ldi	r23, 0x30	; 48
 9d0:	7c 93       	st	X, r23
 9d2:	20 13       	cpse	r18, r16
 9d4:	b8 f7       	brcc	.-18     	; 0x9c4 <__stack+0x165>
 9d6:	7e 91       	ld	r23, -X
 9d8:	70 61       	ori	r23, 0x10	; 16
 9da:	7d 93       	st	X+, r23
 9dc:	30 f0       	brcs	.+12     	; 0x9ea <__stack+0x18b>
 9de:	83 95       	inc	r24
 9e0:	71 e3       	ldi	r23, 0x31	; 49
 9e2:	7d 93       	st	X+, r23
 9e4:	70 e3       	ldi	r23, 0x30	; 48
 9e6:	2a 95       	dec	r18
 9e8:	e1 f7       	brne	.-8      	; 0x9e2 <__stack+0x183>
 9ea:	11 24       	eor	r1, r1
 9ec:	ef 90       	pop	r14
 9ee:	ff 90       	pop	r15
 9f0:	0f 91       	pop	r16
 9f2:	1f 91       	pop	r17
 9f4:	cf 91       	pop	r28
 9f6:	df 91       	pop	r29
 9f8:	99 27       	eor	r25, r25
 9fa:	87 fd       	sbrc	r24, 7
 9fc:	90 95       	com	r25
 9fe:	08 95       	ret

00000a00 <__prologue_saves__>:
 a00:	2f 92       	push	r2
 a02:	3f 92       	push	r3
 a04:	4f 92       	push	r4
 a06:	5f 92       	push	r5
 a08:	6f 92       	push	r6
 a0a:	7f 92       	push	r7
 a0c:	8f 92       	push	r8
 a0e:	9f 92       	push	r9
 a10:	af 92       	push	r10
 a12:	bf 92       	push	r11
 a14:	cf 92       	push	r12
 a16:	df 92       	push	r13
 a18:	ef 92       	push	r14
 a1a:	ff 92       	push	r15
 a1c:	0f 93       	push	r16
 a1e:	1f 93       	push	r17
 a20:	cf 93       	push	r28
 a22:	df 93       	push	r29
 a24:	cd b7       	in	r28, 0x3d	; 61
 a26:	de b7       	in	r29, 0x3e	; 62
 a28:	ca 1b       	sub	r28, r26
 a2a:	db 0b       	sbc	r29, r27
 a2c:	0f b6       	in	r0, 0x3f	; 63
 a2e:	f8 94       	cli
 a30:	de bf       	out	0x3e, r29	; 62
 a32:	0f be       	out	0x3f, r0	; 63
 a34:	cd bf       	out	0x3d, r28	; 61
 a36:	09 94       	ijmp

00000a38 <__epilogue_restores__>:
 a38:	2a 88       	ldd	r2, Y+18	; 0x12
 a3a:	39 88       	ldd	r3, Y+17	; 0x11
 a3c:	48 88       	ldd	r4, Y+16	; 0x10
 a3e:	5f 84       	ldd	r5, Y+15	; 0x0f
 a40:	6e 84       	ldd	r6, Y+14	; 0x0e
 a42:	7d 84       	ldd	r7, Y+13	; 0x0d
 a44:	8c 84       	ldd	r8, Y+12	; 0x0c
 a46:	9b 84       	ldd	r9, Y+11	; 0x0b
 a48:	aa 84       	ldd	r10, Y+10	; 0x0a
 a4a:	b9 84       	ldd	r11, Y+9	; 0x09
 a4c:	c8 84       	ldd	r12, Y+8	; 0x08
 a4e:	df 80       	ldd	r13, Y+7	; 0x07
 a50:	ee 80       	ldd	r14, Y+6	; 0x06
 a52:	fd 80       	ldd	r15, Y+5	; 0x05
 a54:	0c 81       	ldd	r16, Y+4	; 0x04
 a56:	1b 81       	ldd	r17, Y+3	; 0x03
 a58:	aa 81       	ldd	r26, Y+2	; 0x02
 a5a:	b9 81       	ldd	r27, Y+1	; 0x01
 a5c:	ce 0f       	add	r28, r30
 a5e:	d1 1d       	adc	r29, r1
 a60:	0f b6       	in	r0, 0x3f	; 63
 a62:	f8 94       	cli
 a64:	de bf       	out	0x3e, r29	; 62
 a66:	0f be       	out	0x3f, r0	; 63
 a68:	cd bf       	out	0x3d, r28	; 61
 a6a:	ed 01       	movw	r28, r26
 a6c:	08 95       	ret

00000a6e <_exit>:
 a6e:	f8 94       	cli

00000a70 <__stop_program>:
 a70:	ff cf       	rjmp	.-2      	; 0xa70 <__stop_program>
